[ebrowse-hs "ebrowse 5.0" " -x" () ()][ebrowse-ts [ebrowse-cs "CAONode" () 0"header/aonode.h" "class CAONode
{" 1177"header/aonode.h" ]
()([ebrowse-ms "m_children" () 0 () "	aonode_v m_children;" 1814 1  () () 0]
[ebrowse-ms "m_cost" () 0 () "	double m_cost;" 1855 1  () () 0]
[ebrowse-ms "m_estimates" () 0 () "	vector<VALUECOST*> m_estimates;" 1948 1  () () 0]
[ebrowse-ms "m_gcountvalue" () 0 () "	double m_gcountvalue;" 1623 1  () () 0]
[ebrowse-ms "m_gvalue" () 0 () "	double m_gvalue;" 1571 1  () () 0]
[ebrowse-ms "m_invalidValues" () 0 () "	variable_multimap m_invalidValues;" 1987 1  () () 0]
[ebrowse-ms "m_label" () 0 () "	int m_label;" 1365 1  () () 0]
[ebrowse-ms "m_lvalue" () 0 () "	double m_lvalue;" 1701 1  () () 0]
[ebrowse-ms "m_parent" () 0 () "	CAONode* m_parent;" 1771 1  () () 0]
[ebrowse-ms "m_solved" () 0 () "	bool m_solved;" 1438 1  () () 0]
[ebrowse-ms "m_type" () 0 () "	NTYPE m_type;" 1309 1  () () 0]
[ebrowse-ms "m_updated" () 0 () "	bool m_updated;" 1494 1  () () 0]
)
([ebrowse-ms "CAONode" () 0 () "	CAONode(NTYPE type, int label);" 3431 0  () () 0]
[ebrowse-ms "CAONode" () 0 () "	CAONode(const CAONode&);" 1230 2  () () 0]
[ebrowse-ms "addChild" () 0 () "	void addChild(CAONode" 2338 0  () () 0]
[ebrowse-ms "addInvalidValue" () 0 () "	void addInvalidValue(int" 3255 0  () () 0]
[ebrowse-ms "buildValueCosts" () 0 () "	void buildValueCosts(CProblem" 2984 0  () () 0]
[ebrowse-ms "children" () 0 () "	aonode_v& children()" 2223 0  () "	aonode_v& children()" 2223]
[ebrowse-ms "childrenSize" () 0 () "	int childrenSize()" 2271 0  () "	int childrenSize()" 2271]
[ebrowse-ms "cleanInvalidValues" () 0 () "	void cleanInvalidValues(bool" 3363 0  () () 0]
[ebrowse-ms "clear" () 0 () "	void clear()" 2013 0  () () 0]
[ebrowse-ms "computeExactSubtree" () 0 () "	void computeExactSubtree(CProblem" 3122 0  () () 0]
[ebrowse-ms "cost" () 0 () "	double cost()" 2129 0  () "	double cost()" 2129]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 2031 0  () () 0]
[ebrowse-ms "getG" () 0 () "	double getG()" 2392 0  () "	double getG()" 2392]
[ebrowse-ms "getGCount" () 0 () "	double getGCount()" 2547 0  () "	double getGCount()" 2547]
[ebrowse-ms "getL" () 0 () "	double getL()" 2667 0  () "	double getL()" 2667]
[ebrowse-ms "getValueCosts" () 0 () "	vector<VALUECOST*>& getValueCosts()" 3059 0  () "	vector<VALUECOST*>& getValueCosts()" 3059]
[ebrowse-ms "invalidValues" () 0 () "	variable_multimap& invalidValues()" 3198 0  () "	variable_multimap& invalidValues()" 3198]
[ebrowse-ms "isUpdated" () 0 () "	bool isUpdated()" 2869 0  () "	bool isUpdated()" 2869]
[ebrowse-ms "label" () 0 () "	int label()" 2086 0  () "	int label()" 2086]
[ebrowse-ms "operator =" () 0 () "	CAONode& operator=(const" 1268 2  () () 0]
[ebrowse-ms "parent" () 0 () "	CAONode* parent()" 2174 0  () "	CAONode* parent()" 2174]
[ebrowse-ms "prune" () 0 () "	void prune(CAONode" 2802 0  () () 0]
[ebrowse-ms "remove" () 0 () "	void remove(CAONode" 2773 0  () () 0]
[ebrowse-ms "setCost" () 0 () "	void setCost(double" 2494 0  () "	void setCost(double" 2494]
[ebrowse-ms "setG" () 0 () "	void setG(double" 2438 0  () "	void setG(double" 2438]
[ebrowse-ms "setGCount" () 0 () "	void setGCount(double" 2602 0  () "	void setGCount(double" 2602]
[ebrowse-ms "setL" () 0 () "	void setL(double" 2713 0  () "	void setL(double" 2713]
[ebrowse-ms "setParent" () 0 () "	void setParent(CAONode" 2368 0  () () 0]
[ebrowse-ms "setUpdated" () 0 () "	void setUpdated(bool" 2919 0  () "	void setUpdated(bool" 2919]
[ebrowse-ms "type" () 0 () "	NTYPE type()" 2047 0  () "	NTYPE type()" 2047]
[ebrowse-ms "~CAONode" () 1 () "	virtual ~CAONode()" 3470 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CProblem" () 0"header/problem.h" "class CProblem
{" 1150"header/problem.h" ]
([ebrowse-ts [ebrowse-cs "CProblemBayes" () 0"header/bayes.h" "class CProblemBayes :" 1403() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CProblemMixed" () 0"header/ProblemMixed.h" "class CProblemMixed :" 1578"header/ProblemMixed.h" ]
()([ebrowse-ms "m_Constraints" () 0 () "	int m_Constraints;" 1633 1  () () 0]
[ebrowse-ms "m_adjacenciesConstraint" () 0 () "	CFunctionList** m_adjacenciesConstraint;" 2141 1  () () 0]
[ebrowse-ms "m_advancedCacheFlagAND" () 0 () "	variable_v* m_advancedCacheFlagAND;" 4644 1  () () 0]
[ebrowse-ms "m_advancedCacheFlagOR" () 0 () "	variable_v* m_advancedCacheFlagOR;" 4762 1  () () 0]
[ebrowse-ms "m_bayesConnected" () 0 () "    bool m_bayesConnected;" 2322 1  () () 0]
[ebrowse-ms "m_bayesGraph" () 0 () "	CGraph* m_bayesGraph;" 2930 1  () () 0]
[ebrowse-ms "m_bestSolution" () 0 () "	int* m_bestSolution;" 3791 1  () () 0]
[ebrowse-ms "m_bestSolutionCost" () 0 () "	double m_bestSolutionCost;" 3744 1  () () 0]
[ebrowse-ms "m_buckets" () 0 () "	CBucketStruct* m_buckets;" 3037 1  () () 0]
[ebrowse-ms "m_cacheFull" () 0 () "	CCacheTable** m_cacheFull;" 4874 1  () () 0]
[ebrowse-ms "m_cacheFullCounting" () 0 () "	CCacheTable** m_cacheFullCounting;" 4983 1  () () 0]
[ebrowse-ms "m_cacheSep" () 0 () "	CCacheTable** m_cacheSep;" 4924 1  () () 0]
[ebrowse-ms "m_cacheSepCounting" () 0 () "	CCacheTable** m_cacheSepCounting;" 5048 1  () () 0]
[ebrowse-ms "m_connected" () 0 () "	bool m_connected;" 2226 1  () () 0]
[ebrowse-ms "m_constraintConnected" () 0 () "	bool m_constraintConnected;" 2419 1  () () 0]
[ebrowse-ms "m_constraintGraph" () 0 () "	CGraph* m_constraintGraph;" 2876 1  () () 0]
[ebrowse-ms "m_descendants" () 0 () "	variable_v* m_descendants;" 4448 1  () () 0]
[ebrowse-ms "m_domainsPropagation" () 0 () "	CBitVector* m_domainsPropagation;" 2605 1  () () 0]
[ebrowse-ms "m_functionsConstraint" () 0 () "	function_map m_functionsConstraint;" 2058 1  () () 0]
[ebrowse-ms "m_graph" () 0 () "	CGraph* m_graph;" 2787 1  () () 0]
[ebrowse-ms "m_graph2" () 0 () "	CGraphHash m_graph2;" 2847 1  () () 0]
[ebrowse-ms "m_isDeterministic" () 0 () "	bool* m_isDeterministic;" 4347 1  () () 0]
[ebrowse-ms "m_levelInfo" () 0 () "	SLINFO* m_levelInfo;" 4398 1  () () 0]
[ebrowse-ms "m_mapInt2String" () 0 () "	map<int, string> m_mapInt2String;" 5589 1  () () 0]
[ebrowse-ms "m_mapString2Int" () 0 () "	map<string, int> m_mapString2Int;" 5553 1  () () 0]
[ebrowse-ms "m_numberOfSolutions" () 0 () "	double m_numberOfSolutions;" 3661 1  () () 0]
[ebrowse-ms "m_orderingDFS" () 0 () "	int* m_orderingDFS;" 3847 1  () () 0]
[ebrowse-ms "m_ordering_backup" () 0 () "	int* m_ordering_backup;" 4013 1  () () 0]
[ebrowse-ms "m_ordering_cutsetDFS" () 0 () "	int* m_ordering_cutsetDFS;" 4139 1  () () 0]
[ebrowse-ms "m_outputFile" () 0 () "	FILE* m_outputFile;" 3538 1  () () 0]
[ebrowse-ms "m_paramConnectivity" () 0 () "	int m_paramConnectivity;" 3125 1  () () 0]
[ebrowse-ms "m_paramConstraintParents" () 0 () "	int m_paramConstraintParents;" 3290 1  () () 0]
[ebrowse-ms "m_paramHeight" () 0 () "	int m_paramHeight;" 3377 1  () () 0]
[ebrowse-ms "m_paramParents" () 0 () "	int m_paramParents;" 3207 1  () () 0]
[ebrowse-ms "m_paramSigma" () 0 () "	double m_paramSigma;" 3477 1  () () 0]
[ebrowse-ms "m_paramWidth" () 0 () "	int m_paramWidth;" 3426 1  () () 0]
[ebrowse-ms "m_parentSepSet" () 0 () "	variable_v*	m_parentSepSet;" 4478 1  () () 0]
[ebrowse-ms "m_parentSet" () 0 () "	variable_v* m_parentSet;" 4566 1  () () 0]
[ebrowse-ms "m_positionDFS" () 0 () "	int* m_positionDFS;" 3927 1  () () 0]
[ebrowse-ms "m_position_backup" () 0 () "	int* m_position_backup;" 4074 1  () () 0]
[ebrowse-ms "m_position_cutsetDFS" () 0 () "	int* m_position_cutsetDFS;" 4243 1  () () 0]
[ebrowse-ms "m_probabilityOfQuery" () 0 () "	double m_probabilityOfQuery;" 3571 1  () () 0]
[ebrowse-ms "m_r" () 0 () "	int m_r;" 5736 1  () () 0]
[ebrowse-ms "m_superlinkCutset" () 0 () "	vector<int> m_superlinkCutset;" 5517 1  () () 0]
[ebrowse-ms "m_superlinkOrder" () 0 () "	vector<int> m_superlinkOrder;" 5484 1  () () 0]
[ebrowse-ms "m_tightness" () 0 () "	double m_tightness;" 2510 1  () () 0]
[ebrowse-ms "m_tree" () 0 () "	CLegalTree* m_tree;" 2978 1  () () 0]
[ebrowse-ms "m_treeBackup" () 0 () "	CLegalTree* m_treeBackup;" 5136 1  () () 0]
[ebrowse-ms "m_treeDecomposition" () 0 () "	CTreeDecomposition* m_treeDecomposition;" 5411 1  () () 0]
[ebrowse-ms "m_tree_cutset" () 0 () "	CLegalTree* m_tree_cutset;" 5108 1  () () 0]
[ebrowse-ms "m_type" () 0 () "	int  m_type;" 2702 1  () () 0]
[ebrowse-ms "m_validValues" () 0 () "	bool** m_validValues;" 5780 1  () () 0]
[ebrowse-ms "m_validValuesCount" () 0 () "	int* m_validValuesCount;" 5886 1  () () 0]
[ebrowse-ms "m_variablesInFunctions" () 0 () "	vector<function_v> m_variablesInFunctions;" 5723 1  () () 0]
[ebrowse-ms "m_wCutset" () 0 () "	int* m_wCutset;" 5194 1  () () 0]
[ebrowse-ms "m_wCutsetHeight" () 0 () "	int* m_wCutsetHeight;" 5292 1  () () 0]
)
([ebrowse-ms "CProblemMixed" () 0 () "	CProblemMixed(int n, int k);" 14309 0  () () 0]
[ebrowse-ms "CProblemMixed" () 0 () "straints, int sizeConstraint, double tightness);" 14208 0  () () 0]
[ebrowse-ms "CProblemMixed" () 0 () "	CProblemMixed();" 14187 0  () () 0]
[ebrowse-ms "addConstraintFunction" () 1 () "tual void addConstraintFunction(CConstraintTable" 6305 0  () () 0]
[ebrowse-ms "assertEvidence" () 0 () "	bool assertEvidence(int" 11913 0  () () 0]
[ebrowse-ms "backupDomains" () 0 () "	void backupDomains()" 12469 1  () () 0]
[ebrowse-ms "backupOrdering" () 0 () "	void backupOrdering()" 11944 0  () () 0]
[ebrowse-ms "backupPosition" () 0 () "	void backupPosition()" 11969 0  () () 0]
[ebrowse-ms "cacheDestroy" () 0 () "	void cacheDestroy()" 6730 0  () () 0]
[ebrowse-ms "cacheInit" () 0 () "	void cacheInit(int" 6695 0  () () 0]
[ebrowse-ms "computeFractionDone" () 0 () "	void computeFractionDone(int" 9116 0  () () 0]
[ebrowse-ms "consistent" () 0 () "	bool consistent(int" 9949 0  () () 0]
[ebrowse-ms "consistent_old" () 0 () "	bool consistent_old(int" 9348 0  () () 0]
[ebrowse-ms "create" () 0 () "	bool create()" 10756 0  () () 0]
[ebrowse-ms "createCustom" () 0 () "	void createCustom()" 11042 0  () () 0]
[ebrowse-ms "createFromComponnet" () 0 () "	void createFromComponnet(int" 8416 0  () () 0]
[ebrowse-ms "createGridProblem" () 0 () "	void createGridProblem(int" 7936 0  () () 0]
[ebrowse-ms "createProblemFromComponent" () 0 () "	void createProblemFromComponent(variable_v" 8715 0  () () 0]
[ebrowse-ms "createShannonTrees" () 0 () "	void createShannonTrees()" 8145 0  () () 0]
[ebrowse-ms "destroyLevelInfo" () 0 () "	void destroyLevelInfo()" 12280 1  () () 0]
[ebrowse-ms "evalDynamicHeuristic" () 0 () "	void evalDynamicHeuristic(int" 12845 1  () () 0]
[ebrowse-ms "evalStaticHeuristic" () 0 () "	void evalStaticHeuristic(int" 12749 1  () () 0]
[ebrowse-ms "execAO" () 0 () "	int execAO(long" 13794 0  () () 0]
[ebrowse-ms "execBT" () 0 () "	int execBT(long" 13637 0  () () 0]
[ebrowse-ms "expand" () 0 () "	int expand(CAONode" 12982 1  () () 0]
[ebrowse-ms "extractDeterminism" () 0 () "	void extractDeterminism()" 8050 0  () () 0]
[ebrowse-ms "findDeterministicVariables" () 0 () "	bool findDeterministicVariables()" 8834 0  () () 0]
[ebrowse-ms "findTopologicalOrdering" () 0 () "	void findTopologicalOrdering(variable_v" 9076 0  () () 0]
[ebrowse-ms "findVariableToComputePercentageDone" () 0 () "t findVariableToComputePercentageDone(variable_v" 8629 0  () () 0]
[ebrowse-ms "fixOrderingDeterministic" () 0 () "	void fixOrderingDeterministic(variable_s" 8878 0  () () 0]
[ebrowse-ms "fixOrderingDeterministic2" () 0 () "	void fixOrderingDeterministic2(variable_s" 8933 0  () () 0]
[ebrowse-ms "forwardChecking" () 0 () "	bool forwardChecking(CAONode" 10249 0  () () 0]
[ebrowse-ms "forwardChecking" () 0 () "	bool forwardChecking(int" 10095 0  () () 0]
[ebrowse-ms "forwardCheckingByProjection" () 0 () "	bool forwardCheckingByProjection(int" 9814 0  () () 0]
[ebrowse-ms "forwardCheckingByProjection_old" () 0 () "	bool forwardCheckingByProjection_old(int" 9664 0  () () 0]
[ebrowse-ms "forwardCheckingWithMarking" () 0 () "	bool forwardCheckingWithMarking(CAONode" 10407 0  () () 0]
[ebrowse-ms "forwardChecking_old" () 0 () "	bool forwardChecking_old(int" 9498 0  () () 0]
[ebrowse-ms "forwardPrune" () 0 () "	bool forwardPrune(CAONode" 13089 1  () () 0]
[ebrowse-ms "functionsConstraint" () 0 () "	function_map& functionsConstraint()" 5961 0  () "	function_map& functionsConstraint()" 5961]
[ebrowse-ms "getBestSolutionCost" () 0 () "	double getBestSolutionCost()" 11449 0  () "	double getBestSolutionCost()" 11449]
[ebrowse-ms "getBucket" () 1 () "	function_v& getBucket(int" 11392 0  () () 0]
[ebrowse-ms "getConstraintFunctionByID" () 0 () "	CConstraintTable* getConstraintFunctionByID(int" 6419 0  () () 0]
[ebrowse-ms "getInducedWidth" () 0 () "	int getInducedWidth()" 11146 0  () () 0]
[ebrowse-ms "getNConstraints" () 0 () "	int getNConstraints()" 11069 0  () "	int getNConstraints()" 11069]
[ebrowse-ms "getNumberOfSolutions" () 0 () "	double getNumberOfSolutions()" 6523 0  () "	double getNumberOfSolutions()" 6523]
[ebrowse-ms "getOrdering" () 1 () "	virtual int* getOrdering(bool" 11224 0  () () 0]
[ebrowse-ms "getPosition" () 1 () "	virtual int* getPosition(bool" 11273 0  () () 0]
[ebrowse-ms "getProbabilityOfQuery" () 0 () "	double getProbabilityOfQuery()" 6457 0  () "	double getProbabilityOfQuery()" 6457]
[ebrowse-ms "getTree" () 0 () "	CLegalTree* getTree()" 6021 0  () "	CLegalTree* getTree()" 6021]
[ebrowse-ms "getTreeCutset" () 0 () "	CLegalTree* getTreeCutset()" 7602 0  () "	CLegalTree* getTreeCutset()" 7602]
[ebrowse-ms "getTreeDecomposition" () 0 () "	CTreeDecomposition* getTreeDecomposition()" 7675 0  () "	CTreeDecomposition* getTreeDecomposition()" 7675]
[ebrowse-ms "getTreeDescendants" () 1 () "	variable_v& getTreeDescendants(int" 11184 0  () () 0]
[ebrowse-ms "getTreeHeight" () 0 () "	int getTreeHeight()" 11121 0  () () 0]
[ebrowse-ms "getWCutset" () 0 () "	int* getWCutset()" 11504 0  () "	int* getWCutset()" 11504]
[ebrowse-ms "getWCutsetHeight" () 0 () "	int* getWCutsetHeight()" 11557 0  () "	int* getWCutsetHeight()" 11557]
[ebrowse-ms "init" () 0 () "	bool init()" 9157 1  () () 0]
[ebrowse-ms "initConstraintPropagation" () 0 () "	bool initConstraintPropagation()" 10683 0  () () 0]
[ebrowse-ms "initLevelInfo" () 0 () "	bool initLevelInfo()" 12222 1  () () 0]
[ebrowse-ms "isDescendant" () 0 () "	bool isDescendant(int" 6186 0  () () 0]
[ebrowse-ms "isDeterministic" () 0 () "	bool isDeterministic(int" 8990 0  () "	bool isDeterministic(int" 8990]
[ebrowse-ms "isEligibleToBeChecked" () 0 () "	bool isEligibleToBeChecked(CFunction" 9239 0  () () 0]
[ebrowse-ms "load" () 0 () "	bool load(int" 7730 0  () () 0]
[ebrowse-ms "load2" () 0 () "	bool load2(int" 7805 0  () () 0]
[ebrowse-ms "makeAndOrCutsetTree" () 0 () "	void makeAndOrCutsetTree(int" 6930 0  () () 0]
[ebrowse-ms "makeConnectedComponents" () 0 () "	void makeConnectedComponents()" 8384 0  () () 0]
[ebrowse-ms "makeCutsetOr" () 0 () "	void makeCutsetOr(int" 7185 0  () () 0]
[ebrowse-ms "makeGWCutsetTree" () 0 () "	void makeGWCutsetTree(int" 7019 0  () () 0]
[ebrowse-ms "makeTreeDecomposition" () 0 () "	void makeTreeDecomposition(int" 6871 0  () () 0]
[ebrowse-ms "makeTreeDecompositionClusters" () 0 () "	void makeTreeDecompositionClusters(int" 7295 0  () () 0]
[ebrowse-ms "makeTreeDecompositionClustersAssemble" () 0 () "itionClustersAssemble(treeDecompositionCluster_v" 7485 0  () () 0]
[ebrowse-ms "markBarrenVariables" () 0 () "	void markBarrenVariables(bool" 8493 0  () () 0]
[ebrowse-ms "markBarren_removeEvidence_makeConnectedComponents" () 0 () "kBarren_removeEvidence_makeConnectedComponents()" 8575 0  () () 0]
[ebrowse-ms "parentsetCreate" () 0 () "	void parentsetCreate()" 6581 0  () () 0]
[ebrowse-ms "parentsetDestroy" () 0 () "	void parentsetDestroy()" 6608 0  () () 0]
[ebrowse-ms "parentsetInit" () 0 () "	void parentsetInit(int" 6658 0  () () 0]
[ebrowse-ms "parentsetInit" () 0 () "	void parentsetInit()" 6632 0  () () 0]
[ebrowse-ms "parser_simple2" () 0 () "	bool parser_simple2(char" 7893 0  () () 0]
[ebrowse-ms "popLevelInfo" () 0 () "	void popLevelInfo()" 12402 1  () () 0]
[ebrowse-ms "precompute" () 0 () "	bool precompute(int" 12887 1  () () 0]
[ebrowse-ms "preprocess" () 0 () "	bool preprocess(int" 10813 0  () () 0]
[ebrowse-ms "preprocess2" () 0 () "	bool preprocess2(int" 10860 0  () () 0]
[ebrowse-ms "preprocessAdaptiveCaching" () 0 () "	bool preprocessAdaptiveCaching(int" 10921 0  () () 0]
[ebrowse-ms "preprocessCutsetTree" () 0 () "	bool preprocessCutsetTree()" 10975 0  () () 0]
[ebrowse-ms "print" () 0 () "	void print()" 11017 0  () () 0]
[ebrowse-ms "pushLevelInfo" () 0 () "	void pushLevelInfo()" 12337 1  () () 0]
[ebrowse-ms "removeEvidence" () 0 () "	void removeEvidence(bool" 8307 0  () () 0]
[ebrowse-ms "removeNode" () 0 () "	void removeNode(list" 13137 1  () () 0]
[ebrowse-ms "reset" () 0 () "	void reset()" 8350 0  () () 0]
[ebrowse-ms "restoreDomains" () 0 () "	void restoreDomains()" 12517 1  () () 0]
[ebrowse-ms "restoreOrdering" () 0 () "	void restoreOrdering()" 11997 0  () () 0]
[ebrowse-ms "restorePosition" () 0 () "	void restorePosition()" 12023 0  () () 0]
[ebrowse-ms "saveCurrentSolution" () 0 () "	void saveCurrentSolution()" 12574 1  () () 0]
[ebrowse-ms "selectValue" () 0 () "	int selectValue(int" 12064 1  () () 0]
[ebrowse-ms "selectVariable" () 0 () "	int selectVariable(int" 12154 1  () () 0]
[ebrowse-ms "setAdvancedCacheFlag" () 0 () "	void setAdvancedCacheFlag(int" 6764 0  () () 0]
[ebrowse-ms "setHighestVarInScope" () 0 () "	void setHighestVarInScope()" 6802 0  () () 0]
[ebrowse-ms "setOrdering" () 0 () "	void setOrdering(int" 11315 0  () () 0]
[ebrowse-ms "setParamConnectivity" () 0 () "	void setParamConnectivity(int" 11689 0  () "	void setParamConnectivity(int" 11689]
[ebrowse-ms "setParamHeight" () 0 () "	void setParamHeight(int" 11801 0  () "	void setParamHeight(int" 11801]
[ebrowse-ms "setParamParents" () 0 () "	void setParamParents(int" 11627 0  () "	void setParamParents(int" 11627]
[ebrowse-ms "setParamSigma" () 0 () "	void setParamSigma(double" 11858 0  () "	void setParamSigma(double" 11858]
[ebrowse-ms "setParamWidth" () 0 () "	void setParamWidth(int" 11747 0  () "	void setParamWidth(int" 11747]
[ebrowse-ms "setPosition" () 0 () "	void setPosition(int" 11350 0  () () 0]
[ebrowse-ms "setTree" () 0 () "	void setTree(CLegalTree" 6067 0  () "	void setTree(CLegalTree" 6067]
[ebrowse-ms "setTreeCutset" () 0 () "	void setTreeCutset(CLegalTree" 6126 0  () "	void setTreeCutset(CLegalTree" 6126]
[ebrowse-ms "setWCutsetHeight" () 0 () "	void setWCutsetHeight()" 8249 0  () () 0]
[ebrowse-ms "supportIn" () 0 () "	bool supportIn(CFunction" 10550 0  () () 0]
[ebrowse-ms "test" () 0 () "	void test()" 13192 0  () () 0]
[ebrowse-ms "updatePercentageDone" () 0 () "	double updatePercentageDone()" 8669 0  () () 0]
[ebrowse-ms "utility" () 0 () "	double utility(int" 12642 1  () () 0]
[ebrowse-ms "wCutsetInit" () 0 () "	void wCutsetInit()" 10999 0  () () 0]
[ebrowse-ms "~CProblemMixed" () 1 () "	virtual ~CProblemMixed()" 14349 0  () () 0]
)
()
()
()
()
()()
])([ebrowse-ms "m_C" () 0 () "	int m_C;" 1573 1  () () 0]
[ebrowse-ms "m_K" () 0 () "	int m_K;" 1521 1  () () 0]
[ebrowse-ms "m_N" () 0 () "	int m_N;" 1482 1  () () 0]
[ebrowse-ms "m_adjacencies" () 0 () "	CFunctionList** m_adjacencies;" 2285 1  () () 0]
[ebrowse-ms "m_assignment" () 0 () "	int* m_assignment;" 1798 1  () () 0]
[ebrowse-ms "m_backupAssignment" () 0 () "	int* m_backupAssignment;" 1848 1  () () 0]
[ebrowse-ms "m_backupEvidence" () 0 () "	bool* m_backupEvidence;" 1874 1  () () 0]
[ebrowse-ms "m_domains" () 0 () "	int* m_domains;" 1629 1  () () 0]
[ebrowse-ms "m_evidence" () 0 () "	bool* m_evidence;" 1818 1  () () 0]
[ebrowse-ms "m_functions" () 0 () "	function_map m_functions;" 2218 1  () () 0]
[ebrowse-ms "m_name" () 0 () "	const string m_name;" 1185 1  () () 0]
[ebrowse-ms "m_ordering" () 0 () "	int* m_ordering;" 1684 1  () () 0]
[ebrowse-ms "m_position" () 0 () "	int* m_position;" 1731 1  () () 0]
[ebrowse-ms "m_time" () 0 () "	time_t				m_time;" 1424 1  () () 0]
[ebrowse-ms "m_timePassed" () 0 () "	unsigned long		m_timePassed;" 1388 1  () () 0]
)
([ebrowse-ms "CProblem" () 0 () "	CProblem(int n, int k, int p);" 4244 0  () () 0]
[ebrowse-ms "CProblem" () 0 () "	CProblem();" 4228 0  () () 0]
[ebrowse-ms "CProblem" () 0 () "	CProblem(CProblem&);" 1300 2  () () 0]
[ebrowse-ms "addFunction" () 1 () "	virtual void addFunction(CFunction" 3427 0  () () 0]
[ebrowse-ms "backupAssignment" () 0 () "	void backupAssignment()" 2451 0  () () 0]
[ebrowse-ms "functions" () 0 () "	function_map& functions()" 2349 0  () "	function_map& functions()" 2349]
[ebrowse-ms "getBucket" () 9 () "	virtual function_v& getBucket(int" 2789 0  () () 0]
[ebrowse-ms "getC" () 1 () "	virtual int getC()" 3327 0  () "	virtual int getC()" 3327]
[ebrowse-ms "getFunctionByID" () 0 () "	CFunction* getFunctionByID(int" 3041 0  () () 0]
[ebrowse-ms "getHighestNode" () 1 () "	virtual void getHighestNode(int" 3960 0  () () 0]
[ebrowse-ms "getK" () 1 () "	virtual int getK()" 3288 0  () "	virtual int getK()" 3288]
[ebrowse-ms "getMaxDomainSize" () 1 () "	virtual int getMaxDomainSize()" 2948 0  () "	virtual int getMaxDomainSize()" 2948]
[ebrowse-ms "getN" () 1 () "	virtual int getN()" 3249 0  () "	virtual int getN()" 3249]
[ebrowse-ms "getOrdering" () 9 () "	virtual int* getOrdering(bool" 3118 0  () () 0]
[ebrowse-ms "getPosition" () 9 () "	virtual int* getPosition(bool" 3171 0  () () 0]
[ebrowse-ms "getStaticDomainSize" () 1 () "	virtual int getStaticDomainSize(int" 2614 0  () () 0]
[ebrowse-ms "getTreeDescendants" () 9 () "	virtual variable_v& getTreeDescendants(int" 2864 0  () () 0]
[ebrowse-ms "getValue" () 1 () "	virtual int  getValue(int" 3573 0  () () 0]
[ebrowse-ms "getVariableConflicts" () 1 () "	virtual int getVariableConflicts(int" 2698 0  () () 0]
[ebrowse-ms "isAssigned" () 1 () "	virtual bool isAssigned(int" 3645 0  () () 0]
[ebrowse-ms "isEvidence" () 1 () "	virtual bool isEvidence(int" 3725 0  () () 0]
[ebrowse-ms "operator =" () 0 () "	CProblem& operator=(const" 1331 2  () () 0]
[ebrowse-ms "resetEvidence" () 1 () "	virtual void resetEvidence(int" 3847 0  () () 0]
[ebrowse-ms "resetValue" () 1 () "	virtual void resetValue(int" 3609 0  () () 0]
[ebrowse-ms "restoreAssignment" () 0 () "	void restoreAssignment()" 2532 0  () () 0]
[ebrowse-ms "setEvidence" () 1 () "	virtual void setEvidence(int" 3799 0  () () 0]
[ebrowse-ms "setEvidence" () 1 () "	virtual void setEvidence(int" 3762 0  () () 0]
[ebrowse-ms "setValue" () 1 () "	virtual void setValue(int" 3530 0  () () 0]
[ebrowse-ms "~CProblem" () 1 () "	virtual ~CProblem()" 4284 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CBitVector" () 0"header/bitvector.h" "class CBitVector
{" 1295"header/bitvector.h" ]
()([ebrowse-ms "m_numBits" () 0 () "    int m_numBits;" 1921 2  () () 0]
[ebrowse-ms "m_numWords" () 0 () "    int m_numWords;" 1983 2  () () 0]
[ebrowse-ms "storage" () 0 () "    unsigned int *storage;" 2182 2  () () 0]
)
([ebrowse-ms "CBitVector" () 0 () "	CBitVector::CBitVector(int n, bool val);" 1468 0  () () 0]
[ebrowse-ms "CBitVector" () 0 () "    CBitVector(int n);" 1340 0  () () 0]
[ebrowse-ms "CBitVector" () 0 () "	CBitVector();" 1319 0  () () 0]
[ebrowse-ms "dump" () 0 () "	void dump(ostream" 1841 0  () () 0]
[ebrowse-ms "freeBit" () 0 () "    void freeBit(int" 1655 0  () () 0]
[ebrowse-ms "getBitVector" () 0 () "	unsigned int* getBitVector()" 2245 0  () "	unsigned int* getBitVector()" 2245]
[ebrowse-ms "getNumWords" () 0 () "	int			  getNumWords()" 2292 0  () "	int			  getNumWords()" 2292]
[ebrowse-ms "reset" () 0 () "	void reset()" 1818 0  () () 0]
[ebrowse-ms "setBit" () 0 () "    void setBit(int" 1599 0  () () 0]
[ebrowse-ms "size" () 0 () "	int size()" 1768 0  () () 0]
[ebrowse-ms "testBit" () 0 () "    bool testBit(int" 1712 0  () () 0]
[ebrowse-ms "~CBitVector" () 1 () "    virtual ~CBitVector()" 1541 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CTreeDecomposition" () 0"header/TreeDecomposition.h" "class CTreeDecomposition  
{" 1410"header/TreeDecomposition.h" ]
()([ebrowse-ms "m_clusters" () 0 () "	treeDecompositionCluster_v m_clusters;" 1727 1  () () 0]
[ebrowse-ms "m_cutsetTreeNode" () 0 () "	CLegalTreeNode*			m_cutsetTreeNode;" 2124 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CProblem* m_owner;" 1686 1  () () 0]
[ebrowse-ms "m_root" () 0 () "	CTreeDecompositionCluster* m_root;" 1798 1  () () 0]
[ebrowse-ms "m_separators" () 0 () "	treeDecompositionSeparator_v m_separators;" 2051 1  () () 0]
[ebrowse-ms "m_size" () 0 () "	int m_size;" 1551 1  () () 0]
[ebrowse-ms "m_width" () 0 () "	int m_width;" 1617 1  () () 0]
)
([ebrowse-ms "CTreeDecomposition" () 0 () "	CTreeDecomposition(CProblem *owner);" 2284 0  () () 0]
[ebrowse-ms "computeBestVariableGWC" () 0 () "	int computeBestVariableGWC(int" 4336 0  () () 0]
[ebrowse-ms "computeRemainingWidth" () 0 () "	int computeRemainingWidth(int" 3857 0  () () 0]
[ebrowse-ms "computeRemainingWidth" () 0 () "	int computeRemainingWidth(variable_s" 3812 0  () () 0]
[ebrowse-ms "computeSeparatorWeights" () 0 () "	int computeSeparatorWeights(int" 3418 0  () () 0]
[ebrowse-ms "computeSubtreeWeight" () 0 () "e computeSubtreeWeight(CTreeDecompositionCluster" 3688 0  () () 0]
[ebrowse-ms "connectedComponents" () 0 () "	int connectedComponents()" 3950 0  () () 0]
[ebrowse-ms "cyclic" () 0 () "	bool cyclic()" 4424 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 2199 1  () () 0]
[ebrowse-ms "eliminateVar" () 0 () "	void eliminateVar(int" 3321 0  () () 0]
[ebrowse-ms "getClusters" () 0 () "	treeDecompositionCluster_v& getClusters()" 2631 0  () "	treeDecompositionCluster_v& getClusters()" 2631]
[ebrowse-ms "getComponent" () 0 () "	void getComponent(int" 4088 0  () () 0]
[ebrowse-ms "getCutsetTreeNode" () 0 () "	CLegalTreeNode* getCutsetTreeNode()" 2896 0  () "	CLegalTreeNode* getCutsetTreeNode()" 2896]
[ebrowse-ms "getOwner" () 0 () "	CProblem* getOwner()" 2351 0  () "	CProblem* getOwner()" 2351]
[ebrowse-ms "getRootCluster" () 0 () "	CTreeDecompositionCluster* getRootCluster()" 2482 0  () "	CTreeDecompositionCluster* getRootCluster()" 2482]
[ebrowse-ms "getSeparator" () 0 () "eparator* getSeparator(CTreeDecompositionCluster" 4211 0  () () 0]
[ebrowse-ms "getSeparators" () 0 () "	treeDecompositionSeparator_v& getSeparators()" 2765 0  () "	treeDecompositionSeparator_v& getSeparators()" 2765]
[ebrowse-ms "getSize" () 0 () "	int getSize()" 3204 0  () "	int getSize()" 3204]
[ebrowse-ms "getWidth" () 0 () "	int getWidth()" 3109 0  () "	int getWidth()" 3109]
[ebrowse-ms "highestWeightSeparator" () 0 () "DecompositionSeparator* highestWeightSeparator()" 3921 0  () () 0]
[ebrowse-ms "print" () 0 () "	void print()" 3294 0  () () 0]
[ebrowse-ms "setClusters" () 0 () "	void setClusters(treeDecompositionCluster_v" 2702 0  () () 0]
[ebrowse-ms "setCutsetTreeNode" () 0 () "	void setCutsetTreeNode(CLegalTreeNode" 2969 0  () "	void setCutsetTreeNode(CLegalTreeNode" 2969]
[ebrowse-ms "setOwner" () 0 () "	void setOwner(CProblem" 2401 0  () "	void setOwner(CProblem" 2401]
[ebrowse-ms "setRootCluster" () 0 () "	void setRootCluster(CTreeDecompositionCluster" 2551 0  () "	void setRootCluster(CTreeDecompositionCluster" 2551]
[ebrowse-ms "setSeparators" () 0 () "	void setSeparators(treeDecompositionSeparator_v" 2842 0  () () 0]
[ebrowse-ms "setSize" () 0 () "	void setSize(int" 3248 0  () "	void setSize(int" 3248]
[ebrowse-ms "setWidth" () 0 () "	int setWidth(int" 3154 0  () "	int setWidth(int" 3154]
[ebrowse-ms "~CTreeDecomposition" () 1 () "	virtual ~CTreeDecomposition()" 2325 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CGraphHash" () 0"header/graph.h" "class CGraphHash
{" 3220() ]
()([ebrowse-ms "m_neighbors" () 0 () "	map<int,variable_s*> m_neighbors;" 3291 1  () () 0]
[ebrowse-ms "m_vertices" () 0 () "	set<int> m_vertices;" 3255 1  () () 0]
)
([ebrowse-ms "CGraphHash" () 0 () "	CGraphHash();" 4633 0  () () 0]
[ebrowse-ms "CGraphHash" () 0 () "	CGraphHash(CGraphHash& g);" 4565 0  () () 0]
[ebrowse-ms "addAncestralEdges" () 0 () "	void addAncestralEdges(variable_s" 4244 0  () () 0]
[ebrowse-ms "addClique" () 0 () "	void addClique(int" 3498 0  () () 0]
[ebrowse-ms "addClique" () 0 () "	void addClique(vector" 3462 0  () () 0]
[ebrowse-ms "addCliqueSet" () 0 () "	void addCliqueSet(set" 3539 0  () () 0]
[ebrowse-ms "addDirectedEdge" () 0 () "	void addDirectedEdge(int" 3427 0  () () 0]
[ebrowse-ms "addEdge" () 0 () "	void addEdge(int" 3389 0  () () 0]
[ebrowse-ms "addNode" () 0 () "	void addNode(int" 3366 0  () () 0]
[ebrowse-ms "clear" () 0 () "	void clear()" 4104 0  () () 0]
[ebrowse-ms "containsEdge" () 0 () "	bool containsEdge(int" 3581 0  () () 0]
[ebrowse-ms "degree" () 0 () "	int degree(int" 3672 0  () () 0]
[ebrowse-ms "eliminate" () 0 () "	void eliminate(int" 3975 0  () () 0]
[ebrowse-ms "eliminate" () 0 () "	void eliminate(int" 3870 0  () () 0]
[ebrowse-ms "induce" () 0 () "	void induce(vector" 3823 0  () () 0]
[ebrowse-ms "init" () 0 () "	void init(function_v" 4152 0  () () 0]
[ebrowse-ms "isConnected" () 0 () "	bool isConnected()" 4128 0  () () 0]
[ebrowse-ms "neighbors" () 0 () "	variable_s* neighbors(int" 3330 0  () () 0]
[ebrowse-ms "operator =" () 0 () "	CGraphHash& operator=(const" 4600 0  () () 0]
[ebrowse-ms "removeAndConnect" () 0 () "	void removeAndConnect(int" 3706 0  () () 0]
[ebrowse-ms "removeAndConnectAncestral" () 0 () "	void removeAndConnectAncestral(int" 3747 0  () () 0]
[ebrowse-ms "removeEdge" () 0 () "	void removeEdge(int" 3642 0  () () 0]
[ebrowse-ms "removeNode" () 0 () "	void removeNode(int" 3616 0  () () 0]
[ebrowse-ms "scoreFunction" () 0 () "	double scoreFunction(int" 4056 0  () () 0]
[ebrowse-ms "scoreMaxDomainMinFill" () 0 () "	double scoreMaxDomainMinFill(int" 4451 1  () () 0]
[ebrowse-ms "scoreMinDegree" () 0 () "	double scoreMinDegree(int" 4297 1  () () 0]
[ebrowse-ms "scoreMinFill" () 0 () "	double scoreMinFill(int" 4362 1  () () 0]
[ebrowse-ms "scoreMinWeight" () 0 () "	double scoreMinWeight(int" 4396 1  () () 0]
[ebrowse-ms "scoreMinWidth" () 0 () "	double scoreMinWidth(int" 4330 1  () () 0]
[ebrowse-ms "scoreWeightedMinFill" () 0 () "	double scoreWeightedMinFill(int" 4505 1  () () 0]
[ebrowse-ms "~CGraphHash" () 0 () "	~CGraphHash()" 4650 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CGraphNode" () 0"header/graph.h" "class CGraphNode
{" 2987"header/graph.h" ]
()([ebrowse-ms "m_variable" () 0 () "	int m_variable;" 3014 0  () () 0]
)
([ebrowse-ms "CGraphNode" () 0 () "	CGraphNode(int v) :" 3042 0  () "	CGraphNode(int v) :" 3042]
[ebrowse-ms "~CGraphNode" () 0 () "	~CGraphNode()" 3081 0  () "	~CGraphNode()" 3081]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CBucketStruct" () 0"header/bucketstruct.h" "class CBucketStruct
{" 1115"header/bucketstruct.h" ]
()([ebrowse-ms "m_buckets" () 0 () "	CBucket** m_buckets;" 1413 1  () () 0]
[ebrowse-ms "m_locals" () 0 () "	bool m_locals;" 1613 1  () () 0]
[ebrowse-ms "m_ordering" () 0 () "	int* m_ordering;" 1513 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CProblem* m_owner;" 1365 1  () () 0]
[ebrowse-ms "m_position" () 0 () "	int* m_position;" 1564 1  () () 0]
[ebrowse-ms "m_size" () 0 () "	int m_size;" 1460 1  () () 0]
)
([ebrowse-ms "CBucketStruct" () 0 () "	CBucketStruct(CProblem* owner);" 2263 0  () () 0]
[ebrowse-ms "CBucketStruct" () 0 () "	CBucketStruct(const CBucketStruct&);" 1263 2  () () 0]
[ebrowse-ms "clean" () 0 () "	void clean()" 1879 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 1703 1  () () 0]
[ebrowse-ms "getBucketAt" () 0 () "	CBucket* getBucketAt(int" 1978 0  () () 0]
[ebrowse-ms "getHighestNode" () 0 () "	void getHighestNode(CFunction" 2059 0  () () 0]
[ebrowse-ms "getOwner" () 0 () "	CProblem* getOwner()" 2125 0  () "	CProblem* getOwner()" 2125]
[ebrowse-ms "init" () 0 () "	void init(int" 1838 0  () () 0]
[ebrowse-ms "init" () 0 () "	void init(bool" 1771 0  () () 0]
[ebrowse-ms "operator =" () 0 () "	CBucketStruct& operator=(const" 1313 2  () () 0]
[ebrowse-ms "print" () 0 () "	void print()" 1948 0  () () 0]
[ebrowse-ms "process" () 0 () "	bool process(int" 2170 0  () () 0]
[ebrowse-ms "~CBucketStruct" () 1 () "	virtual ~CBucketStruct()" 2299 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CHeapElement" () 0"header/heap.h" "class CHeapElement
{" 1009"header/heap.h" ]
()([ebrowse-ms "m_object" () 0 () "	void* m_object;" 1036 0  () () 0]
[ebrowse-ms "m_score" () 0 () "	double m_score;" 1054 0  () () 0]
)
([ebrowse-ms "CHeapElement" () 0 () "	CHeapElement(void* obj, double score) :" 1128 0  () "	CHeapElement(void* obj, double score) :" 1128]
[ebrowse-ms "CHeapElement" () 0 () "	CHeapElement() :" 1075 0  () "	CHeapElement() :" 1075]
[ebrowse-ms "~CHeapElement" () 0 () "	~CHeapElement()" 1202 0  () "	~CHeapElement()" 1202]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CLegalTree" () 0"header/legaltree.h" "class CLegalTree
{" 1182"header/legaltree.h" ]
()([ebrowse-ms "m_height" () 0 () "	int m_height;" 1345 1  () () 0]
[ebrowse-ms "m_height_w_cutset" () 0 () "	int* m_height_w_cutset;" 1399 1  () () 0]
[ebrowse-ms "m_nodes" () 0 () "	CLegalTreeNode** m_nodes;" 1305 1  () () 0]
[ebrowse-ms "m_ordering" () 0 () "	int* m_ordering;" 1552 1  () () 0]
[ebrowse-ms "m_position" () 0 () "	int* m_position;" 1571 1  () () 0]
[ebrowse-ms "m_root" () 0 () "	CLegalTreeNode* m_root;" 1253 1  () () 0]
[ebrowse-ms "m_size" () 0 () "	int m_size;" 1487 1  () () 0]
)
([ebrowse-ms "CLegalTree" () 0 () "galTree(int size, int* ordering, int* position);" 2992 0  () () 0]
[ebrowse-ms "addVariables" () 0 () "	CLegalTreeNode* addVariables(CLegalTreeNode" 2769 0  () () 0]
[ebrowse-ms "create" () 0 () "	void create(CGraph" 1786 0  () () 0]
[ebrowse-ms "createChain" () 0 () "	void createChain(int" 1944 0  () () 0]
[ebrowse-ms "createDFS" () 0 () "	void createDFS(CGraph" 1872 0  () () 0]
[ebrowse-ms "descendants" () 0 () "	int descendants(int" 2313 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 1599 0  () () 0]
[ebrowse-ms "eraseLinks" () 0 () "	void eraseLinks()" 1980 0  () () 0]
[ebrowse-ms "getChildren" () 0 () "	void getChildren(int" 2119 0  () () 0]
[ebrowse-ms "getNodes" () 0 () "	CLegalTreeNode** getNodes()" 2073 0  () "	CLegalTreeNode** getNodes()" 2073]
[ebrowse-ms "getOrdering" () 1 () "	virtual int* getOrdering()" 2843 0  () () 0]
[ebrowse-ms "getPosition" () 1 () "	virtual int* getPosition()" 2873 0  () () 0]
[ebrowse-ms "getRoot" () 0 () "	CLegalTreeNode* getRoot()" 2427 0  () "	CLegalTreeNode* getRoot()" 2427]
[ebrowse-ms "getWCutsetHeight" () 0 () "	int* getWCutsetHeight()" 2175 0  () "	int* getWCutsetHeight()" 2175]
[ebrowse-ms "height" () 0 () "	int height()" 1641 0  () "	int height()" 1641]
[ebrowse-ms "order" () 0 () "	void order(int" 2226 0  () () 0]
[ebrowse-ms "print" () 0 () "	void print()" 2965 0  () () 0]
[ebrowse-ms "setOrdering" () 0 () "	void setOrdering(int" 2899 0  () () 0]
[ebrowse-ms "setPosition" () 0 () "	void setPosition(int" 2934 0  () () 0]
[ebrowse-ms "setRoot" () 0 () "	void setRoot (CLegalTreeNode" 2371 0  () "	void setRoot (CLegalTreeNode" 2371]
[ebrowse-ms "size" () 0 () "	int size()" 1710 0  () "	int size()" 1710]
[ebrowse-ms "~CLegalTree" () 1 () "	virtual ~CLegalTree()" 3053 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CTreeDecompositionSeparator" () 0"header/TreeDecompositionSeparator.h" "class CTreeDecompositionSeparator  
{" 1241"header/TreeDecompositionSeparator.h" ]
()([ebrowse-ms "m_clusterChild" () 0 () "	CTreeDecompositionCluster* m_clusterChild;" 1469 1  () () 0]
[ebrowse-ms "m_clusterIDChild" () 0 () "	int m_clusterIDChild;" 1675 1  () () 0]
[ebrowse-ms "m_clusterIDParent" () 0 () "	int m_clusterIDParent;" 1610 1  () () 0]
[ebrowse-ms "m_clusterParent" () 0 () "	CTreeDecompositionCluster* m_clusterParent;" 1389 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CTreeDecomposition* m_owner;" 1537 1  () () 0]
[ebrowse-ms "m_variables" () 0 () "	variable_s	m_variables;" 1279 1  () () 0]
[ebrowse-ms "m_weight" () 0 () "	double m_weight;" 1694 1  () () 0]
)
([ebrowse-ms "CTreeDecompositionSeparator" () 0 () "eeDecompositionSeparator(variable_s& variables);" 2062 0  () () 0]
[ebrowse-ms "CTreeDecompositionSeparator" () 0 () "	CTreeDecompositionSeparator();" 2020 0  () () 0]
[ebrowse-ms "addVar" () 0 () "	void addVar(int" 2496 0  () () 0]
[ebrowse-ms "computeWeight" () 0 () "	double computeWeight(int" 3253 0  () () 0]
[ebrowse-ms "deleteVar" () 0 () "	void deleteVar(int" 2565 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 2136 0  () () 0]
[ebrowse-ms "eliminateVar" () 0 () "	void eliminateVar(int" 3342 0  () () 0]
[ebrowse-ms "getClusterChild" () 0 () "	CTreeDecompositionCluster* getClusterChild()" 3193 0  () "	CTreeDecompositionCluster* getClusterChild()" 3193]
[ebrowse-ms "getClusterIDChild" () 0 () "	int getClusterIDChild()" 2844 0  () "	int getClusterIDChild()" 2844]
[ebrowse-ms "getClusterIDParent" () 0 () "	int getClusterIDParent()" 2780 0  () "	int getClusterIDParent()" 2780]
[ebrowse-ms "getClusterParent" () 0 () "	CTreeDecompositionCluster* getClusterParent()" 3114 0  () "	CTreeDecompositionCluster* getClusterParent()" 3114]
[ebrowse-ms "getOwner" () 0 () "	CTreeDecomposition* getOwner()" 2240 0  () "	CTreeDecomposition* getOwner()" 2240]
[ebrowse-ms "getSize" () 0 () "	int getSize()" 2414 0  () "	int getSize()" 2414]
[ebrowse-ms "getVariables" () 0 () "	variable_s& getVariables()" 2366 0  () "	variable_s& getVariables()" 2366]
[ebrowse-ms "isMemberOf" () 0 () "	bool isMemberOf(int" 2293 0  () () 0]
[ebrowse-ms "print" () 0 () "	void print()" 2477 0  () () 0]
[ebrowse-ms "setClusterChild" () 0 () "	void setClusterChild(CTreeDecompositionCluster" 3025 0  () "	void setClusterChild(CTreeDecompositionCluster" 3025]
[ebrowse-ms "setClusterIDChild" () 0 () "	void setClusterIDChild(int" 2713 0  () "	void setClusterIDChild(int" 2713]
[ebrowse-ms "setClusterIDParent" () 0 () "	void setClusterIDParent(int" 2644 0  () "	void setClusterIDParent(int" 2644]
[ebrowse-ms "setClusterParent" () 0 () "	void setClusterParent(CTreeDecompositionCluster" 2934 0  () "	void setClusterParent(CTreeDecompositionCluster" 2934]
[ebrowse-ms "setOwner" () 0 () "	void setOwner(CTreeDecomposition" 2174 0  () "	void setOwner(CTreeDecomposition" 2174]
[ebrowse-ms "weight" () 0 () "	double weight()" 3283 0  () "	double weight()" 3283]
[ebrowse-ms "~CTreeDecompositionSeparator" () 1 () "	virtual ~CTreeDecompositionSeparator()" 2118 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CFunctionList" () 0"header/function.h" "class CFunctionList
{" 3467"header/function.h" ]
()([ebrowse-ms "m_functions" () 0 () "	function_v m_functions;" 3663 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CProblem* m_owner;" 3601 1  () () 0]
[ebrowse-ms "m_root" () 0 () "	int m_root;" 3615 1  () () 0]
[ebrowse-ms "m_variables" () 0 () "	variable_s m_variables;" 3689 1  () () 0]
)
([ebrowse-ms "CFunctionList" () 0 () "	CFunctionList(CProblem* csp = NULL);" 4075 0  () () 0]
[ebrowse-ms "CFunctionList" () 0 () "	CFunctionList(const CFunctionList&);" 3499 2  () () 0]
[ebrowse-ms "add" () 0 () "	void add(CFunction" 3757 0  () () 0]
[ebrowse-ms "getConnections" () 0 () "	variable_s& getConnections()" 4011 0  () "	variable_s& getConnections()" 4011]
[ebrowse-ms "getOwner" () 0 () "	CProblem* getOwner()" 3857 0  () "	CProblem* getOwner()" 3857]
[ebrowse-ms "getRoot" () 0 () "	int getRoot()" 3951 0  () "	int getRoot()" 3951]
[ebrowse-ms "operator =" () 0 () "	CFunctionList& operator=(const" 3549 2  () () 0]
[ebrowse-ms "setOwner" () 0 () "	void setOwner(CProblem" 3805 0  () "	void setOwner(CProblem" 3805]
[ebrowse-ms "setRoot" () 0 () "	void setRoot(int" 3904 0  () "	void setRoot(int" 3904]
[ebrowse-ms "size" () 0 () "	int size()" 3777 0  () () 0]
[ebrowse-ms "~CFunctionList" () 1 () "	virtual ~CFunctionList()" 4116 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CMiniBucket" () 0"header/minibucket.h" "class CMiniBucket
{" 1182"header/minibucket.h" ]
()([ebrowse-ms "m_functions" () 0 () "	function_v m_functions;" 1479 1  () () 0]
[ebrowse-ms "m_id" () 0 () "	int m_id;" 1362 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CBucket* m_owner;" 1408 1  () () 0]
[ebrowse-ms "m_variables" () 0 () "	variable_s m_variables;" 1535 1  () () 0]
)
([ebrowse-ms "CMiniBucket" () 0 () "iniBucket(int id = NOID, CBucket* owner = NULL);" 2273 0  () () 0]
[ebrowse-ms "CMiniBucket" () 0 () "	CMiniBucket(const CMiniBucket&);" 1275 2  () () 0]
[ebrowse-ms "add" () 0 () "	void add(CFunction" 2006 0  () () 0]
[ebrowse-ms "getID" () 0 () "	int getID()" 1604 0  () "	int getID()" 1604]
[ebrowse-ms "getOwner" () 0 () "	CBucket* getOwner()" 1691 0  () "	CBucket* getOwner()" 1691]
[ebrowse-ms "isEmpty" () 0 () "	bool isEmpty()" 1855 0  () () 0]
[ebrowse-ms "isScopeInBound" () 0 () "	bool isScopeInBound(int" 1917 0  () () 0]
[ebrowse-ms "operator =" () 0 () "	CMiniBucket& operator=(const" 1321 2  () () 0]
[ebrowse-ms "process" () 0 () "	bool process(CFunction" 1975 0  () () 0]
[ebrowse-ms "prodMax" () 0 () "	bool prodMax(int" 2146 1  () () 0]
[ebrowse-ms "prodSum" () 0 () "	bool prodSum(int" 2204 1  () () 0]
[ebrowse-ms "remove" () 0 () "	void remove(CFunction" 2059 0  () () 0]
[ebrowse-ms "setID" () 0 () "	void setID(int" 1644 0  () "	void setID(int" 1644]
[ebrowse-ms "setOwner" () 0 () "	void setOwner(CBucket" 1739 0  () "	void setOwner(CBucket" 1739]
[ebrowse-ms "size" () 0 () "	int size()" 1784 0  () () 0]
[ebrowse-ms "~CMiniBucket" () 1 () "	virtual ~CMiniBucket()" 2333 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CLegalTreeNode" () 0"header/legaltree.h" "class CLegalTreeNode
{" 3197"header/legaltree.h" ]
()([ebrowse-ms "m_children" () 0 () "	legaltreenode_v m_children;" 3363 1  () () 0]
[ebrowse-ms "m_height" () 0 () "	int m_height;" 3457 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CLegalTree* m_owner;" 3261 1  () () 0]
[ebrowse-ms "m_parent" () 0 () "	CLegalTreeNode* m_parent;" 3312 1  () () 0]
[ebrowse-ms "m_variable" () 0 () "	int m_variable;" 3406 1  () () 0]
[ebrowse-ms "m_w_cutset" () 0 () "	int m_w_cutset;" 3517 1  () () 0]
)
([ebrowse-ms "CLegalTreeNode" () 0 () "	CLegalTreeNode(int var);" 4088 0  () () 0]
[ebrowse-ms "children" () 0 () "	legaltreenode_v& children()" 3667 0  () "	legaltreenode_v& children()" 3667]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 3610 0  () () 0]
[ebrowse-ms "getHeight" () 0 () "	int getHeight()" 3977 0  () "	int getHeight()" 3977]
[ebrowse-ms "getWCutsetHeight" () 0 () "	int getWCutsetHeight()" 4029 0  () "	int getWCutsetHeight()" 4029]
[ebrowse-ms "parent" () 0 () "	CLegalTreeNode* parent()" 3720 0  () "	CLegalTreeNode* parent()" 3720]
[ebrowse-ms "setHeight" () 0 () "	void setHeight(int" 3811 0  () "	void setHeight(int" 3811]
[ebrowse-ms "setParent" () 0 () "	void setParent(CLegalTreeNode" 3926 0  () "	void setParent(CLegalTreeNode" 3926]
[ebrowse-ms "setWCutset" () 0 () "	void setWCutset(int" 3867 0  () "	void setWCutset(int" 3867]
[ebrowse-ms "variable" () 0 () "	int variable()" 3761 0  () "	int variable()" 3761]
[ebrowse-ms "~CLegalTreeNode" () 1 () "	virtual ~CLegalTreeNode()" 4122 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CBucket" () 0"header/bucket.h" "class CBucket
{" 1163"header/bucket.h" ]
()([ebrowse-ms "m_augment" () 0 () "	function_v m_augment;" 1451 1  () () 0]
[ebrowse-ms "m_functions" () 0 () "	function_v m_functions;" 1397 1  () () 0]
[ebrowse-ms "m_index" () 0 () "	int m_index;" 1304 1  () () 0]
[ebrowse-ms "m_minibuckets" () 0 () "	minibucket_v m_minibuckets;" 1522 1  () () 0]
[ebrowse-ms "m_output" () 0 () "	CFunction* m_output;" 1649 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CBucketStruct* m_owner;" 1588 1  () () 0]
[ebrowse-ms "m_variable" () 0 () "	int m_variable;" 1345 1  () () 0]
)
([ebrowse-ms "CBucket" () 0 () "	CBucket(int var = UNKNOWN);" 1743 0  () () 0]
[ebrowse-ms "CBucket" () 0 () "	CBucket(const CBucket&);" 1226 2  () () 0]
[ebrowse-ms "add" () 0 () "	void add(CFunction" 2303 0  () () 0]
[ebrowse-ms "augment" () 0 () "	void augment(CFunction" 2678 0  () () 0]
[ebrowse-ms "clean" () 0 () "	void clean()" 2010 0  () () 0]
[ebrowse-ms "createPartition" () 0 () "	void createPartition(int" 1882 1  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 1812 1  () () 0]
[ebrowse-ms "destroyPartition" () 0 () "	void destroyPartition()" 1947 1  () () 0]
[ebrowse-ms "evalDynamicHeuristic" () 0 () "	bool evalDynamicHeuristic(int" 3024 0  () () 0]
[ebrowse-ms "evalStaticHeuristic" () 0 () "	bool evalStaticHeuristic(int" 2972 0  () () 0]
[ebrowse-ms "functions" () 0 () "	function_v& functions()" 2152 0  () "	function_v& functions()" 2152]
[ebrowse-ms "getIndex" () 0 () "	int  getIndex()" 2617 0  () "	int  getIndex()" 2617]
[ebrowse-ms "getOutput" () 0 () "	CFunction* getOutput()" 2526 0  () "	CFunction* getOutput()" 2526]
[ebrowse-ms "getOwner" () 0 () "	CBucketStruct* getOwner()" 2476 0  () "	CBucketStruct* getOwner()" 2476]
[ebrowse-ms "getVariable" () 0 () "	int getVariable()" 2201 0  () "	int getVariable()" 2201]
[ebrowse-ms "multiply" () 0 () "	double multiply()" 2889 0  () () 0]
[ebrowse-ms "operator =" () 0 () "	CBucket& operator=(const" 1264 2  () () 0]
[ebrowse-ms "print" () 0 () "	void print()" 2125 0  () () 0]
[ebrowse-ms "process" () 0 () "	bool process(int" 2731 0  () () 0]
[ebrowse-ms "remove" () 0 () "	void remove(CFunction" 2358 0  () () 0]
[ebrowse-ms "setIndex" () 0 () "	void setIndex(int" 2572 0  () "	void setIndex(int" 2572]
[ebrowse-ms "setOwner" () 0 () "	void setOwner(CBucketStruct" 2418 0  () "	void setOwner(CBucketStruct" 2418]
[ebrowse-ms "setVariable" () 0 () "	void setVariable(int" 2251 0  () "	void setVariable(int" 2251]
[ebrowse-ms "size" () 0 () "	int size()" 2086 0  () () 0]
[ebrowse-ms "solve" () 0 () "	bool solve(int" 2803 0  () () 0]
[ebrowse-ms "~CBucket" () 1 () "	virtual ~CBucket()" 1780 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CFunction" () 0"header/function.h" "class CFunction
{" 1244"header/function.h" ]
([ebrowse-ts [ebrowse-cs "CCacheTable" () 0"header/CacheTable.h" "class CCacheTable :" 1092"header/CacheTable.h" ]
()([ebrowse-ms "m_table" () 0 () "	double* m_table;" 1149 1  () () 0]
[ebrowse-ms "m_tableSize" () 0 () "	int m_tableSize;" 1185 1  () () 0]
)
([ebrowse-ms "CCacheTable" () 0 () "eTable(int id, CTYPE type, int argc, int* argv);" 1253 0  () () 0]
[ebrowse-ms "CCacheTable" () 0 () "	CCacheTable();" 1234 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 1578 0  () () 0]
[ebrowse-ms "getCurrentValue" () 1 () "	int getCurrentValue(void" 1516 0  () () 0]
[ebrowse-ms "getTableSize" () 0 () "	int getTableSize()" 1640 0  () "	int getTableSize()" 1640]
[ebrowse-ms "getValueAt" () 0 () "	double getValueAt(int" 1439 0  () () 0]
[ebrowse-ms "init" () 1 () "	void init()" 1346 0  () () 0]
[ebrowse-ms "print" () 1 () "	void print(bool" 1597 0  () () 0]
[ebrowse-ms "purge" () 0 () "	void purge()" 1362 0  () () 0]
[ebrowse-ms "setCurrentValue" () 1 () "	int setCurrentValue(void" 1550 0  () () 0]
[ebrowse-ms "setValueAt" () 0 () "	void setValueAt(int" 1468 0  () () 0]
[ebrowse-ms "substitute" () 1 () "	void substitute(int" 1689 0  () () 0]
[ebrowse-ms "verify" () 1 () "	bool verify()" 1737 0  () () 0]
[ebrowse-ms "~CCacheTable" () 1 () "	virtual ~CCacheTable()" 1320 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CConstraintTable" () 0"header/ConstraintTable.h" "class CConstraintTable :" 1235"header/ConstraintTable.h" ]
()([ebrowse-ms "m_argvShannonTree" () 0 () "	int* m_argvShannonTree;" 1683 1  () () 0]
[ebrowse-ms "m_highestVarInScope" () 0 () "	int m_highestVarInScope;" 1383 1  () () 0]
[ebrowse-ms "m_rootShannonTree" () 0 () "	CConstraintNode* m_rootShannonTree;" 1611 1  () () 0]
[ebrowse-ms "m_table" () 0 () "	int* m_table;" 1288 1  () () 0]
[ebrowse-ms "m_tableSize" () 0 () "	int m_tableSize;" 1329 1  () () 0]
)
([ebrowse-ms "CConstraintTable" () 0 () "tTable(int id, CTYPE type, int argc, int* argv);" 1814 0  () () 0]
[ebrowse-ms "CConstraintTable" () 0 () "	CConstraintTable();" 1790 0  () () 0]
[ebrowse-ms "create" () 0 () "	void create(int" 2007 0  () () 0]
[ebrowse-ms "create" () 0 () "	void create(double" 1934 0  () () 0]
[ebrowse-ms "createShannonTree" () 0 () "	void createShannonTree()" 2848 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 2459 0  () () 0]
[ebrowse-ms "destroyShannonTree" () 0 () "	void destroyShannonTree()" 2878 0  () () 0]
[ebrowse-ms "getArgvShannonTree" () 0 () "	int* getArgvShannonTree()" 2705 0  () "	int* getArgvShannonTree()" 2705]
[ebrowse-ms "getCurrentValue" () 1 () "	int getCurrentValue(void" 2267 0  () () 0]
[ebrowse-ms "getNumberOfParents" () 0 () "	int getNumberOfParents()" 2439 0  () () 0]
[ebrowse-ms "getParent" () 0 () "	int getParent(int" 2406 0  () () 0]
[ebrowse-ms "getRootShannonTree" () 0 () "	CConstraintNode* getRootShannonTree()" 2644 0  () "	CConstraintNode* getRootShannonTree()" 2644]
[ebrowse-ms "getTable" () 0 () "	int* getTable()" 2535 0  () "	int* getTable()" 2535]
[ebrowse-ms "getTableSize" () 0 () "	int getTableSize()" 2577 0  () "	int getTableSize()" 2577]
[ebrowse-ms "getValueAt" () 0 () "	int getValueAt(int" 2193 0  () () 0]
[ebrowse-ms "get_highestVarInScope" () 0 () "	int get_highestVarInScope()" 2063 0  () "	int get_highestVarInScope()" 2063]
[ebrowse-ms "init" () 1 () "	void init()" 1910 0  () () 0]
[ebrowse-ms "print" () 1 () "	void print(bool" 2478 0  () () 0]
[ebrowse-ms "printShannonTree" () 0 () "	void printShannonTree()" 2905 0  () () 0]
[ebrowse-ms "setCurrentValue" () 1 () "	int setCurrentValue(void" 2301 0  () () 0]
[ebrowse-ms "setRootShannonTree" () 0 () "	void setRootShannonTree(CConstraintNode" 2783 0  () "	void setRootShannonTree(CConstraintNode" 2783]
[ebrowse-ms "setValueAt" () 0 () "	void setValueAt(int" 2222 0  () () 0]
[ebrowse-ms "set_highestVarInScope" () 0 () "	void set_highestVarInScope(int" 2132 0  () "	void set_highestVarInScope(int" 2132]
[ebrowse-ms "substitute" () 1 () "	void substitute(int" 2332 0  () () 0]
[ebrowse-ms "verify" () 1 () "	bool verify()" 2514 0  () () 0]
[ebrowse-ms "~CConstraintTable" () 1 () "	virtual ~CConstraintTable()" 1884 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CProbabilityTable" () 0"header/cpt.h" "class CProbabilityTable :" 1243"header/cpt.h" ]
()([ebrowse-ms "m_table" () 0 () "	double* m_table;" 1297 1  () () 0]
[ebrowse-ms "m_tableSize" () 0 () "	int m_tableSize;" 1339 1  () () 0]
)
([ebrowse-ms "CProbabilityTable" () 0 () " CTYPE type, int argc, int* argv, int, double*);" 1487 0  () () 0]
[ebrowse-ms "CProbabilityTable" () 0 () "yTable(int id, CTYPE type, int argc, int* argv);" 1425 0  () () 0]
[ebrowse-ms "CProbabilityTable" () 0 () "	CProbabilityTable();" 1400 0  () () 0]
[ebrowse-ms "create" () 0 () "	void create(int" 1657 0  () () 0]
[ebrowse-ms "create" () 0 () "	void create(int" 1617 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 1981 0  () () 0]
[ebrowse-ms "getChild" () 0 () "	int getChild()" 1907 0  () () 0]
[ebrowse-ms "getCurrentValue" () 1 () "	int getCurrentValue(void" 1791 0  () () 0]
[ebrowse-ms "getNumberOfParents" () 0 () "	int getNumberOfParents()" 1961 0  () () 0]
[ebrowse-ms "getParent" () 0 () "	int getParent(int" 1928 0  () () 0]
[ebrowse-ms "getTable" () 0 () "	double* getTable()" 2060 0  () "	double* getTable()" 2060]
[ebrowse-ms "getTableSize" () 0 () "	int getTableSize()" 2102 0  () "	int getTableSize()" 2102]
[ebrowse-ms "getValueAt" () 0 () "	double getValueAt(int" 1712 0  () () 0]
[ebrowse-ms "init" () 1 () "	void init()" 1596 0  () () 0]
[ebrowse-ms "print" () 1 () "	void print(bool" 2000 0  () () 0]
[ebrowse-ms "setCurrentValue" () 1 () "	int setCurrentValue(void" 1825 0  () () 0]
[ebrowse-ms "setValueAt" () 0 () "	void   setValueAt(int" 1743 0  () () 0]
[ebrowse-ms "substitute" () 1 () "	void substitute(int" 1856 0  () () 0]
[ebrowse-ms "verify" () 1 () "	bool verify()" 2036 0  () () 0]
[ebrowse-ms "~CProbabilityTable" () 1 () "	virtual ~CProbabilityTable()" 1570 0  () () 0]
)
()
()
()
()
()()
])([ebrowse-ms "m_argc" () 0 () "	int  m_argc;" 1451 1  () () 0]
[ebrowse-ms "m_argv" () 0 () "	int* m_argv;" 1436 1  () () 0]
[ebrowse-ms "m_constant" () 0 () "	bool m_constant;" 1568 1  () () 0]
[ebrowse-ms "m_id" () 0 () "	int m_id;" 1344 1  () () 0]
[ebrowse-ms "m_original" () 0 () "	bool m_original;" 1549 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CProblem* m_owner;" 1497 1  () () 0]
[ebrowse-ms "m_reference" () 0 () "	long m_reference;" 1304 1  () () 0]
[ebrowse-ms "m_type" () 0 () "	CTYPE m_type;" 1390 1  () () 0]
[ebrowse-ms "m_used" () 0 () "	bool m_used;" 1583 1  () () 0]
)
([ebrowse-ms "CFunction" () 0 () "nction(int id, CTYPE type, int argc, int* argv);" 1625 0  () () 0]
[ebrowse-ms "CFunction" () 0 () "	CFunction();" 1608 0  () () 0]
[ebrowse-ms "_addRef" () 0 () "	void _addRef()" 1717 0  () "	void _addRef()" 1717]
[ebrowse-ms "_release" () 0 () "	long _release()" 1759 0  () "	long _release()" 1759]
[ebrowse-ms "computeTableSize" () 0 () "	int computeTableSize(int" 3080 0  () () 0]
[ebrowse-ms "computeTableSize" () 0 () "	int computeTableSize()" 3052 0  () () 0]
[ebrowse-ms "getAddress" () 1 () "	virtual int getAddress(int" 2222 0  () () 0]
[ebrowse-ms "getAddress" () 1 () "	virtual int getAddress(int" 2175 0  () () 0]
[ebrowse-ms "getArgc" () 1 () "	virtual int  getArgc()" 2095 0  () "	virtual int  getArgc()" 2095]
[ebrowse-ms "getArgv" () 1 () "	virtual int* getArgv()" 2048 0  () "	virtual int* getArgv()" 2048]
[ebrowse-ms "getArity" () 1 () "	virtual int  getArity()" 2143 0  () () 0]
[ebrowse-ms "getCurrentAddress" () 0 () "	int getCurrentAddress()" 3024 0  () () 0]
[ebrowse-ms "getCurrentValue" () 9 () "	virtual int getCurrentValue(void" 2685 0  () () 0]
[ebrowse-ms "getHighestNode" () 0 () "	int getHighestNode(int" 3255 0  () () 0]
[ebrowse-ms "getID" () 1 () "	virtual int getID()" 1852 0  () "	virtual int getID()" 1852]
[ebrowse-ms "getOwner" () 0 () "	CProblem* getOwner()" 2480 0  () "	CProblem* getOwner()" 2480]
[ebrowse-ms "init" () 9 () "	virtual void init()" 2930 1  () () 0]
[ebrowse-ms "isConstant" () 0 () "	bool isConstant()" 2320 0  () "	bool isConstant()" 2320]
[ebrowse-ms "isMemberOf" () 1 () "	virtual bool isMemberOf(int" 1822 0  () () 0]
[ebrowse-ms "isOriginal" () 0 () "	bool isOriginal()" 2273 0  () "	bool isOriginal()" 2273]
[ebrowse-ms "isScopeBounded" () 0 () "	bool isScopeBounded()" 3180 0  () () 0]
[ebrowse-ms "isUsed" () 0 () "	bool isUsed()" 2576 0  () "	bool isUsed()" 2576]
[ebrowse-ms "print" () 9 () "	virtual void print(bool" 2972 0  () () 0]
[ebrowse-ms "setConstant" () 0 () "	void setConstant(bool" 2426 0  () "	void setConstant(bool" 2426]
[ebrowse-ms "setCurrentValue" () 9 () "	virtual int setCurrentValue(void" 2731 0  () () 0]
[ebrowse-ms "setID" () 1 () "	virtual void setID(int" 1898 0  () "	virtual void setID(int" 1898]
[ebrowse-ms "setOriginal" () 0 () "	void setOriginal(bool" 2373 0  () "	void setOriginal(bool" 2373]
[ebrowse-ms "setOwner" () 0 () "	void setOwner(CProblem" 2528 0  () "	void setOwner(CProblem" 2528]
[ebrowse-ms "setType" () 1 () "	virtual void setType(CTYPE" 1995 0  () "	virtual void setType(CTYPE" 1995]
[ebrowse-ms "setUsed" () 0 () "	void setUsed(bool" 2620 0  () "	void setUsed(bool" 2620]
[ebrowse-ms "substitute" () 9 () "	virtual void substitute(int" 2774 0  () () 0]
[ebrowse-ms "type" () 1 () "	virtual CTYPE type()" 1944 0  () "	virtual CTYPE type()" 1944]
[ebrowse-ms "verify" () 9 () "	virtual bool verify()" 2834 0  () () 0]
[ebrowse-ms "~CFunction" () 1 () "	virtual ~CFunction()" 1688 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CGraph" () 0"header/graph.h" "class CGraph
{" 1199"header/graph.h" ]
()([ebrowse-ms "m_backup" () 0 () "	char** m_backup;" 1343 1  () () 0]
[ebrowse-ms "m_graph" () 0 () "	char** m_graph;" 1279 1  () () 0]
[ebrowse-ms "m_induced" () 0 () "	bool m_induced;" 1412 1  () () 0]
[ebrowse-ms "m_size" () 0 () "	int m_size;" 1225 1  () () 0]
[ebrowse-ms "m_width" () 0 () "	int m_width;" 1358 1  () () 0]
)
([ebrowse-ms "CGraph" () 0 () "	CGraph(int n);" 2845 0  () () 0]
[ebrowse-ms "backup" () 0 () "	void backup()" 1594 0  () () 0]
[ebrowse-ms "cleanConnections" () 0 () "	void cleanConnections()" 2312 0  () () 0]
[ebrowse-ms "clone" () 0 () "	CGraph* clone()" 1861 0  () () 0]
[ebrowse-ms "connect" () 0 () "	void connect(int" 1669 0  () () 0]
[ebrowse-ms "connect" () 0 () "	void connect(variable_s" 1641 0  () () 0]
[ebrowse-ms "createInduced" () 0 () "	void createInduced(int" 1816 0  () () 0]
[ebrowse-ms "disconnect" () 0 () "	void disconnect(int" 1708 0  () () 0]
[ebrowse-ms "extractCliques" () 0 () "	void extractCliques(int" 1888 0  () () 0]
[ebrowse-ms "fillset" () 0 () "	int fillset(int" 2397 1  () () 0]
[ebrowse-ms "getMoralNeighbors" () 0 () "	int getMoralNeighbors(int" 2022 0  () () 0]
[ebrowse-ms "getWidth" () 0 () "	int getWidth()" 2070 0  () "	int getWidth()" 2070]
[ebrowse-ms "init" () 0 () "	void init(function_map" 1538 0  () () 0]
[ebrowse-ms "init" () 0 () "	void init(function_map" 1448 0  () () 0]
[ebrowse-ms "isConnected" () 0 () "	bool isConnected(int" 1975 0  () () 0]
[ebrowse-ms "isConnected" () 0 () "	bool isConnected()" 1951 0  () () 0]
[ebrowse-ms "isEdge" () 0 () "	bool isEdge(int" 2159 0  () () 0]
[ebrowse-ms "neighborhood" () 0 () "	int neighborhood(int" 2336 0  () () 0]
[ebrowse-ms "order" () 1 () "	virtual void order(int" 1752 0  () () 0]
[ebrowse-ms "orderingDefault" () 0 () "	void orderingDefault(int" 2506 2  () () 0]
[ebrowse-ms "orderingMaxCard" () 0 () "	void orderingMaxCard(int" 2733 2  () () 0]
[ebrowse-ms "orderingMinDegree" () 0 () "	void orderingMinDegree(int" 2564 2  () () 0]
[ebrowse-ms "orderingMinFill" () 0 () "	void orderingMinFill(int" 2677 2  () () 0]
[ebrowse-ms "orderingMinWidth" () 0 () "	void orderingMinWidth(int" 2621 2  () () 0]
[ebrowse-ms "orderingRandomized" () 0 () "	void orderingRandomized(int" 2792 2  () () 0]
[ebrowse-ms "restore" () 0 () "	void restore()" 1612 0  () () 0]
[ebrowse-ms "select" () 0 () "	int select(OTYPE" 2448 1  () () 0]
[ebrowse-ms "setWidth" () 0 () "	void setWidth(int" 2116 0  () "	void setWidth(int" 2116]
[ebrowse-ms "width" () 0 () "	int width(int" 2259 0  () () 0]
[ebrowse-ms "~CGraph" () 1 () "	virtual ~CGraph()" 2869 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CHeap" () 0"header/heap.h" "class CHeap
{" 1228"header/heap.h" ]
()([ebrowse-ms "m_elements" () 0 () "	vector<CHeapElement*> m_elements;" 1276 1  () () 0]
[ebrowse-ms "m_size" () 0 () "	int m_size;" 1290 1  () () 0]
)
([ebrowse-ms "CHeap" () 0 () "vector<void*>& objects, vector<double>& scores);" 1765 0  () () 0]
[ebrowse-ms "CHeap" () 0 () "	CHeap(int n, void** objects, double* scores);" 1714 0  () () 0]
[ebrowse-ms "CHeap" () 0 () "	CHeap();" 1701 0  () () 0]
[ebrowse-ms "empty" () 0 () "	bool empty()" 1352 0  () "	bool empty()" 1352]
[ebrowse-ms "heapify" () 0 () "	void heapify(int" 1541 1  () () 0]
[ebrowse-ms "index" () 0 () "	int index(void" 1652 1  () () 0]
[ebrowse-ms "left" () 0 () "	int left(int" 1608 1  () () 0]
[ebrowse-ms "parent" () 0 () "	int parent(int" 1589 1  () () 0]
[ebrowse-ms "pop" () 0 () "	void pop()" 1507 0  () () 0]
[ebrowse-ms "propagateUp" () 0 () "	void propagateUp(int" 1568 1  () () 0]
[ebrowse-ms "push" () 0 () "	void push(void" 1409 0  () () 0]
[ebrowse-ms "right" () 0 () "	int right(int" 1628 1  () () 0]
[ebrowse-ms "score" () 0 () "	double score(int" 1678 1  () () 0]
[ebrowse-ms "size" () 0 () "	int size()" 1314 0  () "	int size()" 1314]
[ebrowse-ms "top" () 0 () "	CHeapElement* top()" 1493 0  () () 0]
[ebrowse-ms "updateScore" () 0 () "	void updateScore(void" 1451 0  () () 0]
[ebrowse-ms "~CHeap" () 0 () "	~CHeap()" 1818 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CTreeDecompositionCluster" () 0"header/TreeDecompositionCluster.h" "class CTreeDecompositionCluster  
{" 1407"header/TreeDecompositionCluster.h" ]
()([ebrowse-ms "m_children" () 0 () "	treeDecompositionCluster_v m_children;" 1771 1  () () 0]
[ebrowse-ms "m_id" () 0 () "	int		m_id;" 1434 1  () () 0]
[ebrowse-ms "m_owner" () 0 () "	CTreeDecomposition* m_owner;" 1583 1  () () 0]
[ebrowse-ms "m_owner_prob" () 0 () "	CProblem* m_owner_prob;" 1655 1  () () 0]
[ebrowse-ms "m_parent" () 0 () "	CTreeDecompositionCluster* m_parent;" 1694 1  () () 0]
[ebrowse-ms "m_variables" () 0 () "	variable_s	m_variables;" 1490 1  () () 0]
[ebrowse-ms "m_visited" () 0 () "	int m_visited;" 1826 1  () () 0]
)
([ebrowse-ms "CTreeDecompositionCluster" () 0 () "mpositionCluster(int id, variable_s& variables);" 1973 0  () () 0]
[ebrowse-ms "CTreeDecompositionCluster" () 0 () "	CTreeDecompositionCluster();" 1940 0  () () 0]
[ebrowse-ms "addChild" () 0 () "	void addChild(CTreeDecompositionCluster" 3061 0  () () 0]
[ebrowse-ms "addVar" () 0 () "	void addVar(int" 2696 0  () () 0]
[ebrowse-ms "children" () 0 () "	treeDecompositionCluster_v& children()" 2930 0  () "	treeDecompositionCluster_v& children()" 2930]
[ebrowse-ms "childrenSize" () 0 () "	int childrenSize()" 2978 0  () "	int childrenSize()" 2978]
[ebrowse-ms "deleteVar" () 0 () "	void deleteVar(int" 2770 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 2058 0  () () 0]
[ebrowse-ms "eliminateVar" () 0 () "	void eliminateVar(int" 3196 0  () () 0]
[ebrowse-ms "getID" () 0 () "	int getID()" 2603 0  () "	int getID()" 2603]
[ebrowse-ms "getOwner" () 0 () "	CTreeDecomposition* getOwner()" 2161 0  () "	CTreeDecomposition* getOwner()" 2161]
[ebrowse-ms "getOwnerProb" () 0 () "	CProblem* getOwnerProb()" 2277 0  () "	CProblem* getOwnerProb()" 2277]
[ebrowse-ms "getSize" () 0 () "	int getSize()" 2549 0  () "	int getSize()" 2549]
[ebrowse-ms "getVariables" () 0 () "	variable_s& getVariables()" 2506 0  () "	variable_s& getVariables()" 2506]
[ebrowse-ms "getVisited" () 0 () "	int getVisited()" 2326 0  () "	int getVisited()" 2326]
[ebrowse-ms "highestVar" () 0 () "	int highestVar()" 3169 0  () () 0]
[ebrowse-ms "isMemberOf" () 0 () "	bool isMemberOf(int" 2435 0  () () 0]
[ebrowse-ms "parent" () 0 () "	CTreeDecompositionCluster* parent()" 2863 0  () "	CTreeDecompositionCluster* parent()" 2863]
[ebrowse-ms "print" () 0 () "	void print()" 2677 0  () () 0]
[ebrowse-ms "setID" () 0 () "	void setID(int" 2641 0  () "	void setID(int" 2641]
[ebrowse-ms "setOwner" () 0 () "	void setOwner(CTreeDecomposition" 2098 0  () "	void setOwner(CTreeDecomposition" 2098]
[ebrowse-ms "setOwnerProb" () 0 () "	void setOwnerProb(CProblem" 2215 0  () "	void setOwnerProb(CProblem" 2215]
[ebrowse-ms "setParent" () 0 () "	void setParent(CTreeDecompositionCluster" 3115 0  () "	void setParent(CTreeDecompositionCluster" 3115]
[ebrowse-ms "setVisited" () 0 () "	void setVisited(int" 2375 0  () "	void setVisited(int" 2375]
[ebrowse-ms "~CTreeDecompositionCluster" () 1 () "	virtual ~CTreeDecompositionCluster()" 2040 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CConstraintNode" () 0"header/constraintnode.h" "class CConstraintNode
{" 1249"header/constraintnode.h" ]
()([ebrowse-ms "m_children" () 0 () "	CConstraintNode** m_children;" 1621 1  () () 0]
[ebrowse-ms "m_gvalue" () 0 () "	double m_gvalue;" 1510 1  () () 0]
[ebrowse-ms "m_parent" () 0 () "	CConstraintNode* m_parent;" 1569 1  () () 0]
[ebrowse-ms "m_value" () 0 () "	int m_value;" 1459 1  () () 0]
[ebrowse-ms "m_variable" () 0 () "	int m_variable;" 1415 1  () () 0]
)
([ebrowse-ms "CConstraintNode" () 0 () "	CConstraintNode(int var, int val);" 2275 0  () () 0]
[ebrowse-ms "CConstraintNode" () 0 () "	CConstraintNode::CConstraintNode();" 2252 0  () () 0]
[ebrowse-ms "CConstraintNode" () 0 () "	CConstraintNode(const CConstraintNode&);" 1310 2  () () 0]
[ebrowse-ms "addToG" () 0 () "	void addToG(double" 2172 0  () "	void addToG(double" 2172]
[ebrowse-ms "children" () 0 () "	CConstraintNode** children()" 1945 0  () "	CConstraintNode** children()" 1945]
[ebrowse-ms "createChildren" () 0 () "	void createChildren(int" 1998 0  () () 0]
[ebrowse-ms "destroy" () 0 () "	void destroy()" 1671 0  () () 0]
[ebrowse-ms "getG" () 0 () "	double getG()" 2071 0  () "	double getG()" 2071]
[ebrowse-ms "operator =" () 0 () "	CConstraintNode& operator=(const" 1364 2  () () 0]
[ebrowse-ms "parent" () 0 () "	CConstraintNode* parent()" 1890 0  () "	CConstraintNode* parent()" 1890]
[ebrowse-ms "setG" () 0 () "	void setG(double" 2117 0  () "	void setG(double" 2117]
[ebrowse-ms "setParent" () 0 () "	void setParent(CConstraintNode" 2047 0  () () 0]
[ebrowse-ms "setValue" () 0 () "	void setValue(int" 1791 0  () "	void setValue(int" 1791]
[ebrowse-ms "setVariable" () 0 () "	void setVariable(int" 1695 0  () "	void setVariable(int" 1695]
[ebrowse-ms "value" () 0 () "	int value()" 1833 0  () "	int value()" 1833]
[ebrowse-ms "variable" () 0 () "	int variable()" 1742 0  () "	int variable()" 1742]
[ebrowse-ms "~CConstraintNode" () 1 () "	virtual ~CConstraintNode()" 2319 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "*Globals*" () 0() () 0"header/aonode.h" ]
()([ebrowse-ms "CTYPE" () 0 () () 0 0  "header/function.h" "m {unknown, CPT, CONSTRAINT, CACHE, COST} CTYPE;" 1087]
[ebrowse-ms "MTYPE" () 0 () () 0 0  "header/defs.h" "typedef enum {LAMBDA, PI} MTYPE;" 5956]
[ebrowse-ms "NTYPE" () 0 () () 0 0  () "typedef enum{AND, OR} NTYPE;" 1052]
[ebrowse-ms "OTYPE" () 0 () () 0 0  "header/graph.h" "um{mindegree, minwidth, minfill, maxcard} OTYPE;" 1076]
[ebrowse-ms "SLINFO" () 0 () () 0 0  "header/defs.h" "} SLINFO;" 6447]
[ebrowse-ms "VALUECOST" () 0 () () 0 0  "header/defs.h" "} VALUECOST;" 6583]
[ebrowse-ms "VARIABLE" () 0 () () 0 0  "header/defs.h" "} VARIABLE;" 6744]
[ebrowse-ms "cost" () 0 () () 0 0  "header/defs.h" "	double cost;" 6509]
[ebrowse-ms "deadEnds" () 0 () () 0 0  "header/ProblemMixed.h" "extern long deadEnds;" 1313]
[ebrowse-ms "domain" () 0 () () 0 0  "header/defs.h" "	int domain;" 6655]
[ebrowse-ms "domainCost" () 0 () () 0 0  "header/defs.h" "	double* domainCost;" 6184]
[ebrowse-ms "domainSize" () 0 () () 0 0  "header/defs.h" "	int* domainSize;" 6134]
[ebrowse-ms "domainState" () 0 () () 0 0  "header/defs.h" "	bool* domainState;" 6245]
[ebrowse-ms "name" () 0 () () 0 0  "header/defs.h" "	int name;" 6641]
[ebrowse-ms "status" () 0 () () 0 0  "header/defs.h" "	int status;" 6083]
[ebrowse-ms "std" () 0 () () 0 0  "header/defs.h" "using namespace std;" 1427]
[ebrowse-ms "zeroDeadEnds" () 0 () () 0 0  "header/ProblemMixed.h" "extern long zeroDeadEnds;" 1390]
)
([ebrowse-ms "RandUniform" () 0 "header/defs.h" "long RandUniform(long" 6944 0  () () 0]
[ebrowse-ms "RandUniformDouble" () 0 "header/defs.h" "double RandUniformDouble()" 6974 0  () () 0]
[ebrowse-ms "cpuTime" () 0 "header/timers.h" "double cpuTime()" 1056 0  () () 0]
[ebrowse-ms "destroy" () 0 "header/defs.h" "	void destroy()" 6353 0  "header/defs.h" "	void destroy()" 6353]
[ebrowse-ms "tagVALUECOST" () 0 "header/defs.h" "	tagVALUECOST(int" 6530 0  "header/defs.h" "	tagVALUECOST(int" 6530]
[ebrowse-ms "tagVARIABLE" () 0 "header/defs.h" "	tagVARIABLE(int" 6675 0  "header/defs.h" "	tagVARIABLE(int" 6675]
[ebrowse-ms "varity_asc" () 2 "header/function.h" "inline bool varity_asc(CFunction" 4159 0  "header/function.h" "inline bool varity_asc(CFunction" 4159]
[ebrowse-ms "varity_desc" () 2 "header/function.h" "inline bool varity_desc(CFunction" 4262 0  "header/function.h" "inline bool varity_desc(CFunction" 4262]
[ebrowse-ms "vc_asc" () 2 "header/defs.h" "inline bool vc_asc(VALUECOST" 6778 0  "header/defs.h" "inline bool vc_asc(VALUECOST" 6778]
[ebrowse-ms "vc_desc" () 2 "header/defs.h" "inline bool vc_desc(VALUECOST" 6865 0  "header/defs.h" "inline bool vc_desc(VALUECOST" 6865]
)
()
()
([ebrowse-ms "AOLIB_BITVECTOR_H" () 512 () () 0 0  "header/bitvector.h" "#define AOLIB_BITVECTOR_H" 945]
[ebrowse-ms "AOLIB_TIMERS_H" () 512 () () 0 0  "header/timers.h" "#define AOLIB_TIMERS_H" 1003]
[ebrowse-ms "AO_ADVANCED_ADVANCED" () 512 () () 0 0  "header/defs.h" "#define AO_ADVANCED_ADVANCED	" 4268]
[ebrowse-ms "AO_ADVANCED_ADVANCED_ID" () 512 () () 0 0  "header/defs.h" "#define AO_ADVANCED_ADVANCED_ID	" 3573]
[ebrowse-ms "AO_ADVANCED_BE" () 512 () () 0 0  "header/defs.h" "#define AO_ADVANCED_BE	" 4300]
[ebrowse-ms "AO_ADVANCED_BE_ID" () 512 () () 0 0  "header/defs.h" "#define AO_ADVANCED_BE_ID	" 3606]
[ebrowse-ms "AO_AUX" () 512 () () 0 0  "header/defs.h" "#define	AO_AUX	" 3809]
[ebrowse-ms "AO_CONSTRAINTS" () 512 () () 0 0  "header/defs.h" "#define	AO_CONSTRAINTS	" 3697]
[ebrowse-ms "AO_FC" () 512 () () 0 0  "header/defs.h" "#define AO_FC	" 3719]
[ebrowse-ms "AO_FC_PROJ" () 512 () () 0 0  "header/defs.h" "#define	AO_FC_PROJ	" 3748]
[ebrowse-ms "AO_LINEAR_ADVANCED" () 512 () () 0 0  "header/defs.h" "#define AO_LINEAR_ADVANCED	" 4197]
[ebrowse-ms "AO_LINEAR_ADVANCED_ID" () 512 () () 0 0  "header/defs.h" "#define AO_LINEAR_ADVANCED_ID	" 3501]
[ebrowse-ms "AO_LINEAR_BE" () 512 () () 0 0  "header/defs.h" "#define AO_LINEAR_BE	" 4228]
[ebrowse-ms "AO_LINEAR_BE_ID" () 512 () () 0 0  "header/defs.h" "#define AO_LINEAR_BE_ID	" 3532]
[ebrowse-ms "AO_NO_PRUNING" () 512 () () 0 0  "header/defs.h" "#define AO_NO_PRUNING	" 3666]
[ebrowse-ms "AUXILIARY" () 512 () () 0 0  "header/defs.h" "#define AUXILIARY	" 3164]
[ebrowse-ms "BE_AUX" () 512 () () 0 0  "header/defs.h" "#define BE_AUX	" 3915]
[ebrowse-ms "BE_AUXILIARY" () 512 () () 0 0  "header/defs.h" "#define BE_AUXILIARY	" 3194]
[ebrowse-ms "BITSINBYTE" () 512 () () 0 0  "header/bitvector.h" "#define BITSINBYTE " 988]
[ebrowse-ms "BITSINWORD" () 512 () () 0 0  "header/bitvector.h" "#define BITSINWORD " 1011]
[ebrowse-ms "DYNAMIC" () 512 () () 0 0  "header/defs.h" "#define DYNAMIC	" 2559]
[ebrowse-ms "EMPTY_CLUSTER" () 512 () () 0 0  "header/defs.h" "#define	EMPTY_CLUSTER	" 4590]
[ebrowse-ms "E_FAILURE" () 512 () () 0 0  "header/defs.h" "#define E_FAILURE	" 1892]
[ebrowse-ms "E_SUCCESS" () 512 () () 0 0  "header/defs.h" "#define E_SUCCESS	" 1870]
[ebrowse-ms "GRAPH_CODING" () 512 () () 0 0  "header/defs.h" "#define GRAPH_CODING	" 2803]
[ebrowse-ms "GRAPH_GRID" () 512 () () 0 0  "header/defs.h" "#define GRAPH_GRID	" 2777]
[ebrowse-ms "GRAPH_RANDOM" () 512 () () 0 0  "header/defs.h" "#define GRAPH_RANDOM	" 2688]
[ebrowse-ms "GRAPH_RANDOM_FIXED" () 512 () () 0 0  "header/defs.h" "#define GRAPH_RANDOM_FIXED	" 2738]
[ebrowse-ms "INFINITY" () 512 () () 0 0  "header/defs.h" "#define INFINITY	" 1628]
[ebrowse-ms "INITIAL_STATE" () 512 () () 0 0  "header/defs.h" "#define INITIAL_STATE	" 4562]
[ebrowse-ms "INP_ORDER" () 512 () () 0 0  "header/defs.h" "#define INP_ORDER	" 4424]
[ebrowse-ms "INP_SIMPLE" () 512 () () 0 0  "header/defs.h" "#define INP_SIMPLE	" 4401]
[ebrowse-ms "LINUX" () 512 () () 0 0  "header/defs.h" "#define LINUX" 1523]
[ebrowse-ms "LSB" () 512 () () 0 0  "header/defs.h" "#define LSB	" 4462]
[ebrowse-ms "MBE_AUGMENT" () 512 () () 0 0  "header/defs.h" "#define MBE_AUGMENT	" 2852]
[ebrowse-ms "MBE_PARTIAL" () 512 () () 0 0  "header/defs.h" "#define MBE_PARTIAL	" 2876]
[ebrowse-ms "MBE_SIMPLE" () 512 () () 0 0  "header/defs.h" "#define MBE_SIMPLE	" 2828]
[ebrowse-ms "MB_BOTH" () 512 () () 0 0  "header/defs.h" "#define MB_BOTH	" 2158]
[ebrowse-ms "MB_HARD" () 512 () () 0 0  "header/defs.h" "#define MB_HARD	" 2116]
[ebrowse-ms "MB_SOFT" () 512 () () 0 0  "header/defs.h" "#define MB_SOFT	" 2137]
[ebrowse-ms "MC_BOTH" () 512 () () 0 0  "header/defs.h" "#define MC_BOTH	" 2093]
[ebrowse-ms "MC_HARD" () 512 () () 0 0  "header/defs.h" "#define MC_HARD	" 2051]
[ebrowse-ms "MC_SOFT" () 512 () () 0 0  "header/defs.h" "#define MC_SOFT	" 2072]
[ebrowse-ms "MINUS_INFINITY" () 512 () () 0 0  "header/defs.h" "#define MINUS_INFINITY	" 1658]
[ebrowse-ms "MSB" () 512 () () 0 0  "header/defs.h" "#define MSB	" 4443]
[ebrowse-ms "MSG_LAMBDA" () 512 () () 0 0  "header/defs.h" "#define MSG_LAMBDA	" 1988]
[ebrowse-ms "MSG_NONE" () 512 () () 0 0  "header/defs.h" "#define MSG_NONE	" 2029]
[ebrowse-ms "MSG_PI" () 512 () () 0 0  "header/defs.h" "#define MSG_PI	" 2007]
[ebrowse-ms "NOID" () 512 () () 0 0  "header/defs.h" "#define NOID	" 1605]
[ebrowse-ms "NUMBER_OF_ALGORITHMS" () 512 () () 0 0  "header/defs.h" "#define NUMBER_OF_ALGORITHMS	" 4342]
[ebrowse-ms "NUMBER_OF_MEASURES" () 512 () () 0 0  "header/defs.h" "#define NUMBER_OF_MEASURES	" 4373]
[ebrowse-ms "OR_CONSTRAINTS" () 512 () () 0 0  "header/defs.h" "#define OR_CONSTRAINTS	" 3986]
[ebrowse-ms "OR_FC" () 512 () () 0 0  "header/defs.h" "#define OR_FC	" 4038]
[ebrowse-ms "OR_FC_PROJ" () 512 () () 0 0  "header/defs.h" "#define OR_FC_PROJ	" 4070]
[ebrowse-ms "OR_NO_PRUNING" () 512 () () 0 0  "header/defs.h" "#define OR_NO_PRUNING	" 4103]
[ebrowse-ms "OR_PRUNING_CONSTRAINTS_ONLY" () 512 () () 0 0  "header/defs.h" "#define OR_PRUNING_CONSTRAINTS_ONLY	" 3285]
[ebrowse-ms "OR_PRUNING_FC_PROJECTION" () 512 () () 0 0  "header/defs.h" "#define OR_PRUNING_FC_PROJECTION	" 3364]
[ebrowse-ms "OR_PRUNING_FORWARD_CHECKING" () 512 () () 0 0  "header/defs.h" "#define OR_PRUNING_FORWARD_CHECKING	" 3326]
[ebrowse-ms "OR_PRUNING_NO" () 512 () () 0 0  "header/defs.h" "#define OR_PRUNING_NO	" 3462]
[ebrowse-ms "PARENT_SEP_BURNT" () 512 () () 0 0  "header/defs.h" "#define PARENT_SEP_BURNT	" 4620]
[ebrowse-ms "PRUNING_CONSTRAINTS_ONLY" () 512 () () 0 0  "header/defs.h" "#define PRUNING_CONSTRAINTS_ONLY	" 2958]
[ebrowse-ms "PRUNING_FC_PROJECTION" () 512 () () 0 0  "header/defs.h" "#define PRUNING_FC_PROJECTION	" 3031]
[ebrowse-ms "PRUNING_FORWARD_CHECKING" () 512 () () 0 0  "header/defs.h" "#define PRUNING_FORWARD_CHECKING	" 2996]
[ebrowse-ms "PRUNING_FULL_LOOK_AHEAD" () 512 () () 0 0  "header/defs.h" "#define PRUNING_FULL_LOOK_AHEAD	" 3140]
[ebrowse-ms "PRUNING_NO" () 512 () () 0 0  "header/defs.h" "#define PRUNING_NO	" 2916]
[ebrowse-ms "PT_NOISYOR" () 512 () () 0 0  "header/cpt.h" "#define PT_NOISYOR	" 1094]
[ebrowse-ms "PT_UNIFORM" () 512 () () 0 0  "header/cpt.h" "#define PT_UNIFORM	" 1041]
[ebrowse-ms "PT_UNIFORM_BIASED" () 512 () () 0 0  "header/cpt.h" "#define PT_UNIFORM_BIASED	" 1072]
[ebrowse-ms "SA_BACKJUMP" () 512 () () 0 0  "header/defs.h" "#define SA_BACKJUMP	" 2610]
[ebrowse-ms "SA_BACKTRACK" () 512 () () 0 0  "header/defs.h" "#define SA_BACKTRACK	" 2587]
[ebrowse-ms "SA_FORWARDCHECK" () 512 () () 0 0  "header/defs.h" "#define SA_FORWARDCHECK	" 2662]
[ebrowse-ms "SA_LOOKAHEAD" () 512 () () 0 0  "header/defs.h" "#define SA_LOOKAHEAD	" 2635]
[ebrowse-ms "SL_FORWARDCHECK" () 512 () () 0 0  "header/defs.h" "#define SL_FORWARDCHECK	" 2213]
[ebrowse-ms "SL_LOOKAHEAD" () 512 () () 0 0  "header/defs.h" "#define SL_LOOKAHEAD	" 2186]
[ebrowse-ms "SL_UNKNOWN" () 512 () () 0 0  "header/defs.h" "#define SL_UNKNOWN	" 2235]
[ebrowse-ms "STATIC" () 512 () () 0 0  "header/defs.h" "#define STATIC	" 2538]
[ebrowse-ms "SV_FAILURE" () 512 () () 0 0  "header/defs.h" "#define SV_FAILURE	" 1963]
[ebrowse-ms "SV_NOVALUE" () 512 () () 0 0  "header/defs.h" "#define SV_NOVALUE	" 1940]
[ebrowse-ms "SV_SUCCESS" () 512 () () 0 0  "header/defs.h" "#define SV_SUCCESS	" 1917]
[ebrowse-ms "S_BACKTRACK" () 512 () () 0 0  "header/defs.h" "#define S_BACKTRACK	" 1784]
[ebrowse-ms "S_EMPTY" () 512 () () 0 0  "header/defs.h" "#define S_EMPTY	" 1845]
[ebrowse-ms "S_END" () 512 () () 0 0  "header/defs.h" "#define S_END	" 1802]
[ebrowse-ms "S_FAILURE" () 512 () () 0 0  "header/defs.h" "#define S_FAILURE	" 1738]
[ebrowse-ms "S_SENDALL" () 512 () () 0 0  "header/defs.h" "#define S_SENDALL	" 1825]
[ebrowse-ms "S_SUCCESS" () 512 () () 0 0  "header/defs.h" "#define S_SUCCESS	" 1716]
[ebrowse-ms "S_TIMEOUT" () 512 () () 0 0  "header/defs.h" "#define S_TIMEOUT	" 1760]
[ebrowse-ms "UNKNOWN" () 512 () () 0 0  "header/defs.h" "#define UNKNOWN	" 1586]
[ebrowse-ms "VO_DEFAULT" () 512 () () 0 0  "header/defs.h" "#define VO_DEFAULT	" 2260]
[ebrowse-ms "VO_DETERMINISM" () 512 () () 0 0  "header/defs.h" "#define VO_DETERMINISM	" 2461]
[ebrowse-ms "VO_MAXCARD" () 512 () () 0 0  "header/defs.h" "#define VO_MAXCARD	" 2354]
[ebrowse-ms "VO_MAXDOMAINMINFILL" () 512 () () 0 0  "header/defs.h" "#define VO_MAXDOMAINMINFILL	" 2435]
[ebrowse-ms "VO_MINDEGREE" () 512 () () 0 0  "header/defs.h" "#define VO_MINDEGREE	" 2285]
[ebrowse-ms "VO_MINFILL" () 512 () () 0 0  "header/defs.h" "#define VO_MINFILL	" 2331]
[ebrowse-ms "VO_MINWEIGHT" () 512 () () 0 0  "header/defs.h" "#define VO_MINWEIGHT	" 2404]
[ebrowse-ms "VO_MINWIDTH" () 512 () () 0 0  "header/defs.h" "#define VO_MINWIDTH	" 2308]
[ebrowse-ms "VO_RANDOMIZED" () 512 () () 0 0  "header/defs.h" "#define VO_RANDOMIZED	" 2380]
[ebrowse-ms "VO_TOPOLOGICAL" () 512 () () 0 0  "header/defs.h" "#define VO_TOPOLOGICAL	" 2487]
[ebrowse-ms "VO_WEIGHTEDMINFILL" () 512 () () 0 0  "header/defs.h" "#define VO_WEIGHTEDMINFILL	" 2517]
[ebrowse-ms "_LIB_HEAP_H" () 512 () () 0 0  "header/heap.h" "#define _LIB_HEAP_H" 964]
[ebrowse-ms "_MPELIB_AONODE_H" () 512 () () 0 0  () "#define _MPELIB_AONODE_H" 978]
[ebrowse-ms "_MPELIB_BAYES_H" () 512 () () 0 0  "header/bayes.h" "#define _MPELIB_BAYES_H" 971]
[ebrowse-ms "_MPELIB_BUCKETSTRUCT_H" () 512 () () 0 0  "header/bucketstruct.h" "#define _MPELIB_BUCKETSTRUCT_H" 1020]
[ebrowse-ms "_MPELIB_BUCKET_H" () 512 () () 0 0  "header/bucket.h" "#define _MPELIB_BUCKET_H" 971]
[ebrowse-ms "_MPELIB_CACHE_H" () 512 () () 0 0  "header/CacheTable.h" "#define _MPELIB_CACHE_H" 1043]
[ebrowse-ms "_MPELIB_CONSTRAINTNODE_H" () 512 () () 0 0  "header/constraintnode.h" "#define _MPELIB_CONSTRAINTNODE_H" 1037]
[ebrowse-ms "_MPELIB_CONSTRAINT_H" () 512 () () 0 0  "header/ConstraintTable.h" "#define _MPELIB_CONSTRAINT_H" 1065]
[ebrowse-ms "_MPELIB_CPT_H" () 512 () () 0 0  "header/cpt.h" "#define _MPELIB_CPT_H" 994]
[ebrowse-ms "_MPELIB_DEFS_H" () 512 () () 0 0  "header/defs.h" "#define _MPELIB_DEFS_H" 966]
[ebrowse-ms "_MPELIB_FUNCTION_H" () 512 () () 0 0  "header/function.h" "#define _MPELIB_FUNCTION_H" 1004]
[ebrowse-ms "_MPELIB_GRAPH_H" () 512 () () 0 0  "header/graph.h" "#define _MPELIB_GRAPH_H" 969]
[ebrowse-ms "_MPELIB_LEGALTREE_H" () 512 () () 0 0  "header/legaltree.h" "#define _MPELIB_LEGALTREE_H" 986]
[ebrowse-ms "_MPELIB_MINIBUCKET_H" () 512 () () 0 0  "header/minibucket.h" "#define _MPELIB_MINIBUCKET_H" 990]
[ebrowse-ms "_MPELIB_MIXED_H" () 512 () () 0 0  "header/ProblemMixed.h" "#define _MPELIB_MIXED_H" 1014]
[ebrowse-ms "_MPELIB_PROBLEM_H" () 512 () () 0 0  "header/problem.h" "#define _MPELIB_PROBLEM_H" 993]
[ebrowse-ms "_MPELIB_TREEDECOMPOSITIONCLUSTER_H" () 512 () () 0 0  "header/TreeDecompositionCluster.h" "#define _MPELIB_TREEDECOMPOSITIONCLUSTER_H" 1132]
[ebrowse-ms "_MPELIB_TREEDECOMPOSITIONSEPARATOR_H" () 512 () () 0 0  "header/TreeDecompositionSeparator.h" "#define _MPELIB_TREEDECOMPOSITIONSEPARATOR_H" 1146]
[ebrowse-ms "_MPELIB_TREEDECOMPOSITION_H" () 512 () () 0 0  "header/TreeDecomposition.h" "#define _MPELIB_TREEDECOMPOSITION_H" 1110]
[ebrowse-ms "divRoundDown" () 512 () () 0 0  "header/defs.h" "#define divRoundDown(" 4802]
[ebrowse-ms "divRoundUp" () 512 () () 0 0  "header/defs.h" "#define divRoundUp(" 4841]
[ebrowse-ms "max" () 512 () () 0 0  "header/defs.h" "#define max(" 4706]
[ebrowse-ms "min" () 512 () () 0 0  "header/defs.h" "#define min(" 4661]
)
([ebrowse-ms "aonode_v" () 0 () () 0 0  "header/defs.h" "typedef vector<CAONode*> aonode_v;" 5658]
[ebrowse-ms "cluster_v" () 0 () () 0 0  "header/defs.h" "typedef vector<CCluster*> cluster_v;" 5488]
[ebrowse-ms "constraintnode_v" () 0 () () 0 0  "header/defs.h" "pedef vector<CConstraintNode*> constraintnode_v;" 5710]
[ebrowse-ms "function_map" () 0 () () 0 0  "header/defs.h" " CFunction*, less<unsigned long> > function_map;" 5232]
[ebrowse-ms "function_v" () 0 () () 0 0  "header/defs.h" "typedef vector<CFunction*> function_v;" 5331]
[ebrowse-ms "legaltreenode_v" () 0 () () 0 0  "header/defs.h" "typedef vector<CLegalTreeNode*> legaltreenode_v;" 5622]
[ebrowse-ms "message_v" () 0 () () 0 0  "header/defs.h" "typedef vector<CMessage*> message_v;" 5572]
[ebrowse-ms "minibucket_v" () 0 () () 0 0  "header/defs.h" "typedef vector<CMiniBucket*> minibucket_v;" 5375]
[ebrowse-ms "minicluster_v" () 0 () () 0 0  "header/defs.h" "typedef vector<CMiniCluster*> minicluster_v;" 5534]
[ebrowse-ms "treeDecompositionCluster_v" () 0 () () 0 0  "header/defs.h" "compositionCluster*> treeDecompositionCluster_v;" 5782]
[ebrowse-ms "treeDecompositionSeparator_v" () 0 () () 0 0  "header/defs.h" "ositionSeparator*> treeDecompositionSeparator_v;" 5858]
[ebrowse-ms "treeDecomposition_v" () 0 () () 0 0  "header/defs.h" "vector<CTreeDecomposition*> treeDecomposition_v;" 5916]
[ebrowse-ms "variable_m" () 0 () () 0 0  "header/defs.h" "typedef map<int, VARIABLE* > variable_m;" 7019]
[ebrowse-ms "variable_multimap" () 0 () () 0 0  "header/defs.h" "ultimap<int, int, less<int> > variable_multimap;" 5291]
[ebrowse-ms "variable_s" () 0 () () 0 0  "header/defs.h" "typedef set<int, less<int> > variable_s;" 5450]
[ebrowse-ms "variable_v" () 0 () () 0 0  "header/defs.h" "typedef vector<int> variable_v;" 5408]
)
()()
]